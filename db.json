{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-matery/source/favicon.png","path":"favicon.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/bb.css","path":"css/bb.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","path":"css/gitment.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/matery.css","path":"css/matery.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my.css","path":"css/my.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/matery.js","path":"js/matery.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","path":"medias/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","path":"medias/comment_bg.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","path":"medias/cover.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/contact.png","path":"medias/contact.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","path":"medias/icp.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","path":"medias/logo.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","path":"medias/reward/wechat.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","path":"medias/reward/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","path":"libs/background/canvas-nest.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","path":"libs/background/ribbon-dynamic.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","path":"libs/background/ribbon-refresh.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","path":"libs/background/ribbon.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","path":"libs/instantpage/instantpage.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery.min.js","path":"libs/jquery/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","path":"libs/minivaline/MiniValine.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.css","path":"libs/prism/prism.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.eot","path":"libs/awesome/webfonts/fa-brands-400.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.svg","path":"libs/awesome/webfonts/fa-brands-400.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","path":"libs/awesome/webfonts/fa-brands-400.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","path":"libs/awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.eot","path":"libs/awesome/webfonts/fa-regular-400.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff","path":"libs/awesome/webfonts/fa-brands-400.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.svg","path":"libs/awesome/webfonts/fa-regular-400.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff","path":"libs/awesome/webfonts/fa-regular-400.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","path":"libs/awesome/webfonts/fa-regular-400.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.eot","path":"libs/awesome/webfonts/fa-solid-900.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","path":"libs/awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.svg","path":"libs/awesome/webfonts/fa-solid-900.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","path":"libs/awesome/webfonts/fa-solid-900.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff","path":"libs/awesome/webfonts/fa-solid-900.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","path":"libs/awesome/css/all.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.eot","path":"libs/lightGallery/fonts/lg.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","path":"libs/awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/404/index.md","hash":"f856d43418c22a2e0acda0dc8dfc338c5f591fb4","modified":1629702218664},{"_id":"source/_data/friends.json","hash":"336d1009e3d0a21466b47a084f374f1f33d5050c","modified":1629702197915},{"_id":"source/_posts/JS红宝书-数据类型.md","hash":"3cd5165c8814da17b2f1147169b93a38d9d1f6f3","modified":1631286552769},{"_id":"source/_posts/Leetcode刷题笔记 2021.08.24.md","hash":"9aa3e89fdff100562e927dd076db3412bd7813c6","modified":1630769955139},{"_id":"source/_posts/Leetcode刷题笔记 2021.08.28.md","hash":"b85a93aa49507dbe61a853c1ef48c256057713f6","modified":1630168936943},{"_id":"source/_posts/Leetcode刷题笔记 2021.08.26.md","hash":"5103ff0e854ddba93e952a879a7d578d030fbe4b","modified":1629981828982},{"_id":"source/_posts/Leetcode刷题笔记 2021.08.29.md","hash":"89e4319174ca6648116bc0a4f8c63ad19c7dbc82","modified":1630221419947},{"_id":"source/_posts/Leetcode刷题笔记 2021.08.31.md","hash":"bc0a85e9fa804226fdc40cc52117eaa9ffd97e74","modified":1630411943220},{"_id":"source/_posts/Leetcode刷题笔记 2021.08.30.md","hash":"bf054254329d240823b3bcc70a061cba0584cac7","modified":1630334910852},{"_id":"source/_posts/Leetcode刷题笔记 2021.09.04.md","hash":"27156930c2656f1ce524c8ca73f2cfdff73d2136","modified":1630769906806},{"_id":"source/_posts/hello-world.md","hash":"0b5cf90a14f0102bcd0d521cf95b645785f0273e","modified":1629703314137},{"_id":"source/about/index.md","hash":"27716ad12695774908760b4b4efa667654c1f754","modified":1629702120969},{"_id":"source/contact/index.md","hash":"df200366f9e2c014b2b7957eed4ab9eb02cdde41","modified":1629702139649},{"_id":"source/categories/index.md","hash":"b0626f6c32790d70bb1909bb945d2eb418d467c3","modified":1629702046855},{"_id":"source/friends/index.md","hash":"6e1710744cd6ee34cd876af8b9a51b32e8677df8","modified":1629702161274},{"_id":"source/tags/index.md","hash":"9897e22b3e10cb380eacc82eed0f1267b00ea810","modified":1629702105387},{"_id":"themes/hexo-theme-matery/.gitignore","hash":"727607929a51db7ea10968f547c26041eee9cfff","modified":1606456707000},{"_id":"themes/hexo-theme-matery/CHANGELOG.md","hash":"084ec8b110a20170d08a0aa5fd8accf601051835","modified":1606456707000},{"_id":"themes/hexo-theme-matery/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1606456707000},{"_id":"themes/hexo-theme-matery/README_CN.md","hash":"089de96e2165ea2a8a3adf38ebda85b65e7f716e","modified":1606456707000},{"_id":"themes/hexo-theme-matery/_config.yml","hash":"01b5240ac9cfbc1a4a0b88399a254f7f1543821c","modified":1629702798412},{"_id":"themes/hexo-theme-matery/README.md","hash":"0366f3d50b18d095b0581e7b5974e3283d693884","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/404.ejs","hash":"9c8ca67377211e5d60fdde272a975faa9a91a22a","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/about.ejs","hash":"41849f9300b8dc47048333fcf4a897dd8a2a13ca","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/archive.ejs","hash":"cdac701de8370f9f3794a0eed4165983993a1ca7","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/bb.ejs","hash":"21959d702f17a3d98b716daf44c8b5eecd59c7c5","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/categories.ejs","hash":"8e54665cc25d7c333da7d9f312987190be6215da","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/category.ejs","hash":"00019bca11fb46477f22017cb1f5ad8444da0580","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/contact.ejs","hash":"19d62e521c4253496db559478db5164ddfd2480e","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/friends.ejs","hash":"92892bab5578ccf758ce57e19fca08be80d0d5b9","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/index.ejs","hash":"4dc6f08e7709cc04e886be72dbf0d06469f0effc","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/layout.ejs","hash":"974b44eb3e343cd3ee57ebad34bbb0eff4184400","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/post.ejs","hash":"90b5a4c1f70e4756db569c15a7c6cad0c77c4500","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/tag.ejs","hash":"85a4b05bd8a6ad0f17ff2e97dae56949b379c204","modified":1606456707000},{"_id":"themes/hexo-theme-matery/languages/default.yml","hash":"54ccc01b097c5bf6820f0edfcece1a87b78ab32d","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/tags.ejs","hash":"cf9517aa6a0111355121f44615d6923e312283c7","modified":1606456707000},{"_id":"themes/hexo-theme-matery/languages/zh-CN.yml","hash":"a957b05f70265a86a87d922e18488571809d2472","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/favicon.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1606456707000},{"_id":"themes/hexo-theme-matery/languages/zh-HK.yml","hash":"ae34ac0e175c3037675722e436637efbceea32f0","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/category-radar.ejs","hash":"1d8747fda89a0b2ca3c7008867cbfeecad0578a6","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/artitalk.ejs","hash":"b14e486f12b9ac42a273b80e4d785fcb94cf04b2","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/category-cloud.ejs","hash":"1b3df1009234c0112424b497b18b4ad8240b3bc7","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/my-gallery.ejs","hash":"65a2d2f9722f84c7fd98f6bdf79087a14848ebd8","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/dream.ejs","hash":"9a472ad5591100cdb65d0df9d01034163bd6dd9d","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/my-projects.ejs","hash":"ef60b64021fa349b0048425d858dfcf6c906fede","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/music.ejs","hash":"e9e3e327d5de9d7aeadbde32e1d558652d9e9195","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/my-skills.ejs","hash":"89a0092df72d23093128f2fbbdc8ca7f83ebcfd9","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/post-calendar.ejs","hash":"48821e644bc73553d7c5c56d2e8ee111a70cd776","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/post-charts.ejs","hash":"ab5f986f428215941aeaa0c88aefd440c47d3bcf","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/recommend.ejs","hash":"8551137e94ca4e2e3b8b63d5626255884cb60cb5","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-cloud.ejs","hash":"fc42b72cddc231f7485cdc1fd6852b66be6add26","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-wordcloud.ejs","hash":"487aacb2454d6bf0d21cdb07ddd1fd5ddbca9038","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/video.ejs","hash":"a0e002377af2a7f7e4da6d9a644de97adb035925","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/back-top.ejs","hash":"47ee36a042bb6d52bbe1d0f329637e8ffcf1d0aa","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/background.ejs","hash":"aef6edeeb11209831a11d8c7f5d59992e2573335","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-analytics.ejs","hash":"3bbcdb474ca1dcad514bdc4b7763e17c55df04fd","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover-content.ejs","hash":"28617bf2a35a4269eba6df466acd174e416d2d1e","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-push.ejs","hash":"2cebcc5ea3614d7f76ec36670e68050cbe611202","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover.ejs","hash":"02191109712f61c0e487b8f0b8466597181a9004","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/changyan.ejs","hash":"cd919d31564e118c2ee8d5cbfb7d51ee6da15d82","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/footer.ejs","hash":"3be24e4c370671eda53bdfd99fb748f4a22948ba","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/disqus.ejs","hash":"b2dc2c8b5ed56815e55cc2ea54a6dc4eeba2375d","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/gitalk.ejs","hash":"2aa8fbb04b046fa7679092a48372d7e036835dff","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/github-link.ejs","hash":"3aeb581bd78ab8e15b858e4c44c03bcf92f20b9e","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/google-analytics.ejs","hash":"5f4992205617da5f8cc5863c62b5ec46e414e2fb","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/head.ejs","hash":"f8438ac80df005934a330b029de292d26f0b6ecb","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/gitment.ejs","hash":"90f6218512ef2eab63ada7ad2fc766ae635a2297","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/index-cover.ejs","hash":"76b4a37e0364380b143fdf94bf1a5e6941564414","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/header.ejs","hash":"59e38c70f3d8e7165e686e5e84a627835f4321b0","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/livere.ejs","hash":"9c3401b42ea7f26410a5593bae93ada7e57b43be","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/minivaline.ejs","hash":"5f09386aece8f9cf31f6059bbde79cd6c5171493","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/mobile-nav.ejs","hash":"cb0cb452be1cd1857ba600f04025b506f3b6fc79","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/navigation.ejs","hash":"78b70ff24b3039c871331ebec114b936c1756cc8","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/post-cover.ejs","hash":"d1c873c5de54498c722e155aadb8c0ec39485dfa","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/paging.ejs","hash":"e2df12cf92a82b1a7a7add2eac1db1d954bc5511","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail-toc.ejs","hash":"3ff94aff01936242a9f4e1f31adb9b43bfab8d53","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail.ejs","hash":"880ebaf78a947631a38ad0b3d65201315845a264","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/post-statis.ejs","hash":"04889f9031743c6b081d02fa4027b0dbfcc45ecf","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/reprint-statement.ejs","hash":"0ce3f9361f558b99cc2f059c5e50b0e2a152ae38","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/prev-next.ejs","hash":"c76b78782ea82340104fccc089417572e0adece4","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/reward.ejs","hash":"ffc55bc7e73bc698bfc58d8e3780c336b83282cf","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/search.ejs","hash":"150529c9fb9aa8ddb42ec3e02645d301faa2503b","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/share.ejs","hash":"c941730a2471d6aab367cbb6e09ed08b56c83143","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/social-link.ejs","hash":"6f871bd3a70f720e4e451f1f4f625cbc6d8994a4","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/valine.ejs","hash":"0e4c0a6154aa34007849928ca88f05b6185b256e","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/css/matery.css","hash":"a630f6e8643904073dce9eada57b5c16c4dba5e2","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/js/matery.js","hash":"b86de5fe3e9766b7ff80df12ea41c3a9e30825f7","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/js/search.js","hash":"e1482406c58ea2a0eb178d7e4efb2c879cdddc80","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","hash":"2a6287308628881ce27b9a7de53ba15c2be00d02","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/contact.png","hash":"443ea472dd49b74d9d70295837eb381c8c64f02c","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","hash":"d9095f5ea8719374d9d1ff020279426f5b2a1396","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","hash":"fe93385aa92fe328e01c8221a80b039be9e4e140","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","hash":"1abc719b95d1b26f1f898e6b0a9b7609146e332f","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","hash":"940ded3ea12c2fe1ab0820d2831ec405f3f1fe9f","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","hash":"fbb58c37e2c74f127ae0c566afa9b48889aab79f","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.css","hash":"62e5474893dece076534352f564ceabd6e088a5a","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","hash":"9ab8ef576c9a57115194152e79cca79b0a41dd70","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.eot","hash":"439c8afd3373acb4a73135a34e220464a89cd5e2","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff","hash":"59439d3ad31d856d78ec3e2bd9f1eafa2c7a581c","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","hash":"0f4bd02942a54a6b3200d9078adff88c2812e751","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f6f653b4ea8fc487bdb590d39d5a726258a55f40","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","hash":"9c6632aeec67d3e84a1434884aa801514ff8103b","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","hash":"69ec96cd9b4bc3aa631adc9da61353f50c39f031","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","hash":"39fb2535460ce66cc0b34e07ffb9411db1405f09","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","hash":"4ac047e92d0363b1a61ab756aca6dac13fb77494","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.eot","hash":"22f9e7d5226408eb2d0a11e118257a3ca22b8670","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","hash":"91cbeeaceb644a971241c08362898599d6d968ce","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","hash":"a46bd47ff0a90b812aafafda587d095cdb844271","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff","hash":"18838f5260317da3c5ed29bf844ac8a4f7ad0529","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff","hash":"92803b8753ceda573c6906774677c5a7081d2fbb","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","hash":"ecc41e32ad2696877a1656749841f3b5543bbe3d","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","hash":"9c081b88b106c6c04ecb895ba7ba7d3dcb3b55ac","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","hash":"ab122a36998a4f62a61e61a4fc5e00248113413b","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","hash":"ed7282cc129c4ff9f322d2f2897fb4aac5c48589","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","hash":"8fefe38f28804f90116bdcb74a0875c9de9f3b7d","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.svg","hash":"3d3a49445343d80f3b553e3e3425b9a7bd49acaf","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.eot","hash":"cab8e84ae5682d1d556e234df9c790985888def8","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","hash":"9521ed12274c2cbc910cea77657116fcf6545da3","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","hash":"e5ac5033678afa9d69edffe9a61004f836cb5734","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.svg","hash":"5e2d2a159294576bea69cc3360efb5ffe110ab2d","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.svg","hash":"7da88b19e1486f8c968d3cf5ab3f194f01ea17fd","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1606456707000},{"_id":"public/atom.xml","hash":"937eb87f35da7d5ccefe43bad7030321642e706b","modified":1631286567864},{"_id":"public/search.xml","hash":"2a268bc7f7d2e14e945db5454ca2051de0ee1357","modified":1631286567864},{"_id":"public/404/index.html","hash":"311d6de44cc6d79dd1c526976f0e61c8db62ae94","modified":1631286567864},{"_id":"public/contact/index.html","hash":"52995d9e3ea99447b4d4f8d99ce80942d1e26edd","modified":1631286567864},{"_id":"public/about/index.html","hash":"d9c8aa6cbe4fe3216b73ce1f690a7da7d10e1a08","modified":1631286567864},{"_id":"public/tags/index.html","hash":"4e0f0978693f98425162fdf43662e8ec9cd70f9a","modified":1631286567864},{"_id":"public/friends/index.html","hash":"136cc1bbd34d776eee085356dccc683227f38b08","modified":1631286567864},{"_id":"public/categories/index.html","hash":"9f12faf89c9fe6e882a18ecd536eb876e2c7ed76","modified":1631286567864},{"_id":"public/2021/09/10/js-hong-bao-shu-shu-ju-lei-xing/index.html","hash":"7bf6b0cb0e1374ebb77ff4926437077429c92afe","modified":1631286567864},{"_id":"public/2021/09/04/leetcode-shua-ti-bi-ji-2021.09.04/index.html","hash":"090d9440a8b187179a5a2ce401ecc5d657013b12","modified":1631286567864},{"_id":"public/2021/08/31/leetcode-shua-ti-bi-ji-2021.08.31/index.html","hash":"ee5ff9c1f37bef5763065f6c5c1c8c47f5a3e25d","modified":1631286567864},{"_id":"public/2021/08/30/leetcode-shua-ti-bi-ji-2021.08.30/index.html","hash":"f6a81d19d4ff118c182ed4386c619c19bb689f2b","modified":1631286567864},{"_id":"public/2021/08/29/leetcode-shua-ti-bi-ji-2021.08.29/index.html","hash":"e95ef5f948475173ac8b499368459c2e36e3f50e","modified":1631286567864},{"_id":"public/2021/08/29/leetcode-shua-ti-bi-ji-2021.08.28/index.html","hash":"5348c5a9565d32075b10d1001b68c70ec8d05d0e","modified":1631286567864},{"_id":"public/2021/08/26/leetcode-shua-ti-bi-ji-2021.08.26/index.html","hash":"2f490c475782d8ade671a3dc32f8e4a804b0b9b0","modified":1631286567864},{"_id":"public/2021/08/24/leetcode-shua-ti-bi-ji-2021.08.24/index.html","hash":"666b463f8007a3245b4df4ac1bf746ad93c467a3","modified":1631286567864},{"_id":"public/2021/08/22/hello-world/index.html","hash":"4af47943cf20d01835aeb11ff25638d35c64d5ae","modified":1631286567864},{"_id":"public/archives/index.html","hash":"2479dd77a762c58b667c0a7d84b4a3f0e3065727","modified":1631286567864},{"_id":"public/archives/2021/index.html","hash":"851560635846f427d8c17108045dd05f1fa94d58","modified":1631286567864},{"_id":"public/index.html","hash":"857e15f18f2ef57f8b5d8b887e4a61971d71f4ff","modified":1631286567864},{"_id":"public/archives/2021/08/index.html","hash":"9bb1e1175b5af36b9fd1cb78fc5f787bcaad6ae2","modified":1631286567864},{"_id":"public/archives/2021/09/index.html","hash":"bebabfca8b21818161ebc2739d61dff0f1331901","modified":1631286567864},{"_id":"public/categories/JavaScript/index.html","hash":"6feaad1a05ec5b3e66b46838e6cff97f9af09c10","modified":1631286567864},{"_id":"public/categories/leetcode/index.html","hash":"3103abcdaffdbd17a3b07e5a81434b546360602c","modified":1631286567864},{"_id":"public/categories/leetcode/双指针/index.html","hash":"5386f164e7fb2a1af49b36f51fef0de5fd37f301","modified":1631286567864},{"_id":"public/categories/leetcode/快慢指针/index.html","hash":"a0ef2193eaae856e23e49f3b7ce254d7b824d398","modified":1631286567864},{"_id":"public/categories/hello-world/index.html","hash":"a2d860b2c738bc24860d9d7efb126357c402755b","modified":1631286567864},{"_id":"public/categories/leetcode/dp/index.html","hash":"c0c49f750c1ab3d236fdb6b8933ad64c8f5ae7da","modified":1631286567864},{"_id":"public/categories/hello-world/start/index.html","hash":"86568fd13b91630905188a6f20fc152b17466f68","modified":1631286567864},{"_id":"public/tags/JavaScript/index.html","hash":"72b990c8151adb25e2f67eb86124f68f036f4b55","modified":1631286567864},{"_id":"public/categories/leetcode/双指针/搜索与回溯算法/index.html","hash":"09083f5b6d321f99810b2ae49ae645a8ea84af04","modified":1631286567864},{"_id":"public/tags/数据类型/index.html","hash":"736c0e2f97c4ac6c4817fea588871ce69433d8b7","modified":1631286567864},{"_id":"public/tags/leetcode/index.html","hash":"cbddcfd21a1352a19be803b2ef125ec80079c87f","modified":1631286567864},{"_id":"public/tags/树的遍历/index.html","hash":"022363d3e435dca6ceeffe5387b28a599756ec79","modified":1631286567864},{"_id":"public/tags/动态规划/index.html","hash":"480840ace86c72cf348e28da13a8205668fa4df3","modified":1631286567864},{"_id":"public/tags/双指针/index.html","hash":"b44a5c82c49a20bcac42c418969c6c456c555f7c","modified":1631286567864},{"_id":"public/tags/快慢指针/index.html","hash":"a2fa4abda9c753c4ed5886a90333cad57fce0545","modified":1631286567864},{"_id":"public/tags/hello-world/index.html","hash":"c035225589e33a5a034ed847f71a8c29a9e13806","modified":1631286567864},{"_id":"public/tags/搜索与回溯算法/index.html","hash":"7b052a7b5e6ce6eb56479325931db54d90d1c572","modified":1631286567864},{"_id":"public/favicon.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1631286567864},{"_id":"public/medias/contact.png","hash":"443ea472dd49b74d9d70295837eb381c8c64f02c","modified":1631286567864},{"_id":"public/medias/avatar.jpg","hash":"2a6287308628881ce27b9a7de53ba15c2be00d02","modified":1631286567864},{"_id":"public/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1631286567864},{"_id":"public/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1631286567864},{"_id":"public/medias/logo.png","hash":"d9095f5ea8719374d9d1ff020279426f5b2a1396","modified":1631286567864},{"_id":"public/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1631286567864},{"_id":"public/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1631286567864},{"_id":"public/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1631286567864},{"_id":"public/libs/awesome/webfonts/fa-regular-400.eot","hash":"439c8afd3373acb4a73135a34e220464a89cd5e2","modified":1631286567864},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff","hash":"59439d3ad31d856d78ec3e2bd9f1eafa2c7a581c","modified":1631286567864},{"_id":"public/libs/awesome/webfonts/fa-regular-400.ttf","hash":"0f4bd02942a54a6b3200d9078adff88c2812e751","modified":1631286567864},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f6f653b4ea8fc487bdb590d39d5a726258a55f40","modified":1631286567864},{"_id":"public/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1631286567864},{"_id":"public/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1631286567864},{"_id":"public/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1631286567864},{"_id":"public/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1631286567864},{"_id":"public/libs/lightGallery/fonts/lg.svg","hash":"9c6632aeec67d3e84a1434884aa801514ff8103b","modified":1631286567864},{"_id":"public/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1631286567864},{"_id":"public/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1631286567864},{"_id":"public/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1631286567864},{"_id":"public/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1631286567864},{"_id":"public/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1631286567864},{"_id":"public/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1631286567864},{"_id":"public/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1631286567864},{"_id":"public/medias/banner/2.jpg","hash":"39fb2535460ce66cc0b34e07ffb9411db1405f09","modified":1631286567864},{"_id":"public/medias/banner/0.jpg","hash":"69ec96cd9b4bc3aa631adc9da61353f50c39f031","modified":1631286567864},{"_id":"public/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1631286567864},{"_id":"public/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1631286567864},{"_id":"public/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1631286567864},{"_id":"public/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1631286567864},{"_id":"public/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1631286567864},{"_id":"public/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1631286567864},{"_id":"public/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1631286567864},{"_id":"public/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1631286567864},{"_id":"public/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1631286567864},{"_id":"public/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1631286567864},{"_id":"public/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1631286567864},{"_id":"public/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1631286567864},{"_id":"public/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1631286567864},{"_id":"public/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1631286567864},{"_id":"public/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1631286567864},{"_id":"public/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1631286567864},{"_id":"public/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1631286567864},{"_id":"public/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1631286567864},{"_id":"public/medias/reward/wechat.png","hash":"fe93385aa92fe328e01c8221a80b039be9e4e140","modified":1631286567864},{"_id":"public/medias/reward/alipay.jpg","hash":"1abc719b95d1b26f1f898e6b0a9b7609146e332f","modified":1631286567864},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff","hash":"18838f5260317da3c5ed29bf844ac8a4f7ad0529","modified":1631286567864},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff","hash":"92803b8753ceda573c6906774677c5a7081d2fbb","modified":1631286567864},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff2","hash":"9c081b88b106c6c04ecb895ba7ba7d3dcb3b55ac","modified":1631286567864},{"_id":"public/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1631286567864},{"_id":"public/medias/banner/1.jpg","hash":"ab122a36998a4f62a61e61a4fc5e00248113413b","modified":1631286567864},{"_id":"public/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1631286567864},{"_id":"public/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1631286567864},{"_id":"public/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1631286567864},{"_id":"public/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1631286567864},{"_id":"public/libs/awesome/webfonts/fa-brands-400.ttf","hash":"91cbeeaceb644a971241c08362898599d6d968ce","modified":1631286567864},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff2","hash":"a46bd47ff0a90b812aafafda587d095cdb844271","modified":1631286567864},{"_id":"public/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1631286567864},{"_id":"public/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1631286567864},{"_id":"public/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1631286567864},{"_id":"public/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1631286567864},{"_id":"public/js/matery.js","hash":"b86de5fe3e9766b7ff80df12ea41c3a9e30825f7","modified":1631286567864},{"_id":"public/js/search.js","hash":"e1482406c58ea2a0eb178d7e4efb2c879cdddc80","modified":1631286567864},{"_id":"public/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1631286567864},{"_id":"public/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1631286567864},{"_id":"public/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1631286567864},{"_id":"public/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1631286567864},{"_id":"public/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1631286567864},{"_id":"public/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1631286567864},{"_id":"public/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1631286567864},{"_id":"public/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1631286567864},{"_id":"public/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1631286567864},{"_id":"public/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1631286567864},{"_id":"public/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1631286567864},{"_id":"public/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1631286567864},{"_id":"public/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1631286567864},{"_id":"public/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1631286567864},{"_id":"public/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1631286567864},{"_id":"public/libs/prism/prism.css","hash":"62e5474893dece076534352f564ceabd6e088a5a","modified":1631286567864},{"_id":"public/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1631286567864},{"_id":"public/libs/tocbot/tocbot.css","hash":"9ab8ef576c9a57115194152e79cca79b0a41dd70","modified":1631286567864},{"_id":"public/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1631286567864},{"_id":"public/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1631286567864},{"_id":"public/libs/awesome/webfonts/fa-solid-900.eot","hash":"cab8e84ae5682d1d556e234df9c790985888def8","modified":1631286567864},{"_id":"public/libs/awesome/webfonts/fa-regular-400.svg","hash":"3d3a49445343d80f3b553e3e3425b9a7bd49acaf","modified":1631286567864},{"_id":"public/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1631286567864},{"_id":"public/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1631286567864},{"_id":"public/libs/gitalk/gitalk.css","hash":"940ded3ea12c2fe1ab0820d2831ec405f3f1fe9f","modified":1631286567864},{"_id":"public/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1631286567864},{"_id":"public/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1631286567864},{"_id":"public/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1631286567864},{"_id":"public/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1631286567864},{"_id":"public/medias/banner/3.jpg","hash":"4ac047e92d0363b1a61ab756aca6dac13fb77494","modified":1631286567864},{"_id":"public/medias/banner/6.jpg","hash":"ed7282cc129c4ff9f322d2f2897fb4aac5c48589","modified":1631286567864},{"_id":"public/libs/awesome/webfonts/fa-brands-400.eot","hash":"22f9e7d5226408eb2d0a11e118257a3ca22b8670","modified":1631286567864},{"_id":"public/css/matery.css","hash":"a630f6e8643904073dce9eada57b5c16c4dba5e2","modified":1631286567864},{"_id":"public/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1631286567864},{"_id":"public/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1631286567864},{"_id":"public/libs/minivaline/MiniValine.js","hash":"fbb58c37e2c74f127ae0c566afa9b48889aab79f","modified":1631286567864},{"_id":"public/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1631286567864},{"_id":"public/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1631286567864},{"_id":"public/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1631286567864},{"_id":"public/medias/banner/4.jpg","hash":"e5ac5033678afa9d69edffe9a61004f836cb5734","modified":1631286567864},{"_id":"public/libs/awesome/webfonts/fa-solid-900.ttf","hash":"9521ed12274c2cbc910cea77657116fcf6545da3","modified":1631286567864},{"_id":"public/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1631286567864},{"_id":"public/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1631286567864},{"_id":"public/libs/awesome/css/all.css","hash":"ecc41e32ad2696877a1656749841f3b5543bbe3d","modified":1631286567864},{"_id":"public/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1631286567864},{"_id":"public/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1631286567864},{"_id":"public/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1631286567864},{"_id":"public/libs/gitalk/gitalk.min.js","hash":"8fefe38f28804f90116bdcb74a0875c9de9f3b7d","modified":1631286567864},{"_id":"public/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1631286567864},{"_id":"public/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1631286567864},{"_id":"public/libs/awesome/webfonts/fa-brands-400.svg","hash":"5e2d2a159294576bea69cc3360efb5ffe110ab2d","modified":1631286567864},{"_id":"public/libs/awesome/webfonts/fa-solid-900.svg","hash":"7da88b19e1486f8c968d3cf5ab3f194f01ea17fd","modified":1631286567864},{"_id":"public/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1631286567864}],"Category":[{"name":"JavaScript","_id":"cktehwkp600041svfe1zh7hnd"},{"name":"leetcode","_id":"cktehwkpc000c1svf7tg467vm"},{"name":"双指针","parent":"cktehwkpc000c1svf7tg467vm","_id":"cktehwkpm000t1svf172teowu"},{"name":"快慢指针","parent":"cktehwkpc000c1svf7tg467vm","_id":"cktehwkpn000w1svfc714ezsn"},{"name":"hello world","_id":"cktehwkpo00101svfdwr9gg5u"},{"name":"dp","parent":"cktehwkpc000c1svf7tg467vm","_id":"cktehwkpp00151svf5mje1oly"},{"name":"start","parent":"cktehwkpo00101svfdwr9gg5u","_id":"cktehwkps001j1svf9e4f7d1s"},{"name":"搜索与回溯算法","parent":"cktehwkpm000t1svf172teowu","_id":"cktehwkq500201svf4n5626mf"}],"Data":[{"_id":"friends","data":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}],"Page":[{"title":"404","date":"2018-09-30T09:25:30.000Z","type":"404","layout":"404","description":"Oops～，我崩溃了！找不到你想要的页面 :(","_content":"","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2018-09-30 17:25:30\ntype: \"404\"\nlayout: \"404\"\ndescription: \"Oops～，我崩溃了！找不到你想要的页面 :(\"\n---\n","updated":"2021-08-23T07:03:38.664Z","path":"404/index.html","comments":1,"_id":"cktehwkow00001svf6u8ofmw2","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"contact","date":"2018-09-30T09:25:30.000Z","type":"contact","layout":"contact","_content":"","source":"contact/index.md","raw":"---\ntitle: contact\ndate: 2018-09-30 17:25:30\ntype: \"contact\"\nlayout: \"contact\"\n---","updated":"2021-08-23T07:02:19.649Z","path":"contact/index.html","comments":1,"_id":"cktehwkp300021svfcg5p4iij","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"about","date":"2018-09-30T09:25:30.000Z","type":"about","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-09-30 17:25:30\ntype: \"about\"\nlayout: \"about\"\n---\n","updated":"2021-08-23T07:02:00.969Z","path":"about/index.html","comments":1,"_id":"cktehwkp800061svff4zp1wtg","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"tags","date":"2018-09-30T10:23:38.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-09-30 18:23:38\ntype: \"tags\"\nlayout: \"tags\"\n---\n","updated":"2021-08-23T07:01:45.387Z","path":"tags/index.html","comments":1,"_id":"cktehwkp900081svf6ei2341u","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"friends","date":"2018-12-12T13:25:30.000Z","type":"friends","layout":"friends","_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2018-12-12 21:25:30\ntype: \"friends\"\nlayout: \"friends\"\n---\n","updated":"2021-08-23T07:02:41.274Z","path":"friends/index.html","comments":1,"_id":"cktehwkpb000a1svfgays7gpw","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"categories","date":"2018-09-30T09:25:30.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-09-30 17:25:30\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2021-08-23T07:00:46.855Z","path":"categories/index.html","comments":1,"_id":"cktehwkpd000e1svf6x4o5rlw","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""}],"Post":[{"title":"数据类型","_content":"\n# 数据类型\n\n## typeof操作符\n\n对一个值使用typeof操作符会返回下列字符串之一：\n\n- ‘undefined’：表示值未定义\n- ‘boolean'：表示值为布尔值\n- 'string'：表示值为字符串\n- 'number'：表示值为数值\n- 'object'：表示值为对象或null\n- 'function'：表示值为函数\n- 'symbol'：表示值为符号\n\n","source":"_posts/JS红宝书-数据类型.md","raw":"---\n\ntitle: 数据类型\n\ntag: ['JavaScript', '数据类型']\n\ncategories: \n\n- JavaScript\n\n---\n\n# 数据类型\n\n## typeof操作符\n\n对一个值使用typeof操作符会返回下列字符串之一：\n\n- ‘undefined’：表示值未定义\n- ‘boolean'：表示值为布尔值\n- 'string'：表示值为字符串\n- 'number'：表示值为数值\n- 'object'：表示值为对象或null\n- 'function'：表示值为函数\n- 'symbol'：表示值为符号\n\n","slug":"JS红宝书-数据类型","published":1,"date":"2021-09-10T15:08:26.466Z","updated":"2021-09-10T15:09:12.769Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cktehwkoz00011svf6g1m9148","content":"<h1 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h1><h2 id=\"typeof操作符\"><a href=\"#typeof操作符\" class=\"headerlink\" title=\"typeof操作符\"></a>typeof操作符</h2><p>对一个值使用typeof操作符会返回下列字符串之一：</p>\n<ul>\n<li>‘undefined’：表示值未定义</li>\n<li>‘boolean’：表示值为布尔值</li>\n<li>‘string’：表示值为字符串</li>\n<li>‘number’：表示值为数值</li>\n<li>‘object’：表示值为对象或null</li>\n<li>‘function’：表示值为函数</li>\n<li>‘symbol’：表示值为符号</li>\n</ul>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<h1 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h1><h2 id=\"typeof操作符\"><a href=\"#typeof操作符\" class=\"headerlink\" title=\"typeof操作符\"></a>typeof操作符</h2><p>对一个值使用typeof操作符会返回下列字符串之一：</p>\n<ul>\n<li>‘undefined’：表示值未定义</li>\n<li>‘boolean’：表示值为布尔值</li>\n<li>‘string’：表示值为字符串</li>\n<li>‘number’：表示值为数值</li>\n<li>‘object’：表示值为对象或null</li>\n<li>‘function’：表示值为函数</li>\n<li>‘symbol’：表示值为符号</li>\n</ul>\n"},{"title":"Leetcode刷题笔记 2021.08.24","_content":"# Leetcode刷题笔记 2021.08.24\n\n## 搜索与回溯算法专题\n\n### 基础知识回顾\n\n#### 树的遍历\n\n**深度优先遍历（DFS）：**\n\n- **先序遍历：**先访问节点本身，再访问左侧子节点，最后是右侧子节点\n- **中序遍历：**先访问左侧子节点，再访问节点本身，最后事右侧子节点\n- **后序遍历：**先访问左侧子节点，在访问右侧子节点，最后访问节点本身\n\n**广度优先遍历（BFS）：**\n\n通过队列的辅助，每次去除队列头部节点访问该节点并将左右子节点分别压入队列\n\n#### [剑指 Offer 32 - I. 从上到下打印二叉树](https://leetcode-cn.com/problems/cong-shang-dao-xia-da-yin-er-cha-shu-lcof/)\n\n从上到下打印出二叉树的每个节点，同一层的节点按照从左到右的顺序打印。\n\n例如:\n给定二叉树: `[3,9,20,null,null,15,7]`，返回：`[3,9,20,15,7]`\n\n**算法：广度优先搜索（BFS）**\n\n```js\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nvar levelOrder = function (root) {\n    if(!root) return []\n    let queue = [root]\n    let res = []\n    while (queue.length) {\n        let new_node = queue.shift()\n        res.push(new_node.val)\n\t\t// 通过将根节点入队，再获取最前面的根节点出队，将子节点入队实现广度优先搜索（BFS）\n        new_node.left && queue.push(new_node.left)\n        new_node.right && queue.push(new_node.right)\n    }\n    return res\n};\n```\n\n#### [剑指 Offer 32 - II. 从上到下打印二叉树 II](https://leetcode-cn.com/problems/cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof/)\n\n**通过临时数组tmp存储，并且通过倒序方式实现初始队列长度的遍历**\n\n```js\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[][]}\n */\nvar levelOrder = function (root) {\n    if (!root) return []\n    let queue = [root]\n    let res = []\n\n    while (queue.length) {\n        let tmp = []\n        for (let i = queue.length - 1; i >= 0; i--) {\n            let new_node = queue.shift()\n            tmp.push(new_node.val)\n\n            new_node.left && queue.push(new_node.left)\n            new_node.right && queue.push(new_node.right)\n        }\n        res.push(tmp)\n    }\n    return res\n};\n```\n\n#### [剑指 Offer 32 - III. 从上到下打印二叉树 III](https://leetcode-cn.com/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof/)\n\n**通过数组reverse()完成逆序操作**\n\n```js\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[][]}\n */\nvar levelOrder = function (root) {\n    if (!root) return []\n    let queue = [root]\n    let res = []\n    let re = true\n\n    while (queue.length) {\n        let tmp = []\n        for (let i = queue.length - 1; i >= 0; i--) {\n            let new_node = queue.shift()\n            tmp.push(new_node.val)\n\n            new_node.left && queue.push(new_node.left)\n            new_node.right && queue.push(new_node.right)\n        }\n        if (re) {\n            res.push(tmp)\n            re = !re\n        } else {\n            res.push(tmp.reverse())\n            re = !re\n        }\n\n    }\n    return res\n};\n```\n\n#### [剑指 Offer 26. 树的子结构](https://leetcode-cn.com/problems/shu-de-zi-jie-gou-lcof/)\n\n**通过先序遍历进行对比**\n\n```js\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} A\n * @param {TreeNode} B\n * @return {boolean}\n */\nvar flag = true\n\nvar isSubStructure = function (A, B) {\n    if (!B || !A) return false\n    let n = A\n    let stack = [n]\n    while (stack.length) {\n        let n = stack.pop()\n        if (n.val == B.val) {\n            flag = true\n            dfs(n, B)\n            if (flag) return true\n        }\n        n.right && stack.push(n.right)\n        n.left && stack.push(n.left)\n    }\n    return false\n};\n\nvar dfs = function (A, B) {\n    if (!A || !B) return false\n    // console.log(A.val, A.left, B.val, B.left, B.left && !A.left)\n    if (A.val !== B.val) return flag = false\n    if (B.left && !A.left) return flag = false\n    if (B.right && !A.right) return flag = false\n    if (A.left && B.left)\n        dfs(A.left, B.left)\n    if (A.right && B.right)\n        dfs(A.right, B.right)\n}\n```\n\n#### [剑指 Offer 27. 二叉树的镜像](https://leetcode-cn.com/problems/er-cha-shu-de-jing-xiang-lcof/)\n\n```js\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */\nvar mirrorTree = function (root) {\n    if (root === null) {\n        return null;\n    }\n    const left = mirrorTree(root.left);\n    const right = mirrorTree(root.right);\n    root.left = right;\n    root.right = left;\n    return root;\n}\n```\n\n","source":"_posts/Leetcode刷题笔记 2021.08.24.md","raw":"---\ntitle: Leetcode刷题笔记 2021.08.24\ntag: ['leetcode', '树的遍历']\ncategories: \n- leetcode\n---\n# Leetcode刷题笔记 2021.08.24\n\n## 搜索与回溯算法专题\n\n### 基础知识回顾\n\n#### 树的遍历\n\n**深度优先遍历（DFS）：**\n\n- **先序遍历：**先访问节点本身，再访问左侧子节点，最后是右侧子节点\n- **中序遍历：**先访问左侧子节点，再访问节点本身，最后事右侧子节点\n- **后序遍历：**先访问左侧子节点，在访问右侧子节点，最后访问节点本身\n\n**广度优先遍历（BFS）：**\n\n通过队列的辅助，每次去除队列头部节点访问该节点并将左右子节点分别压入队列\n\n#### [剑指 Offer 32 - I. 从上到下打印二叉树](https://leetcode-cn.com/problems/cong-shang-dao-xia-da-yin-er-cha-shu-lcof/)\n\n从上到下打印出二叉树的每个节点，同一层的节点按照从左到右的顺序打印。\n\n例如:\n给定二叉树: `[3,9,20,null,null,15,7]`，返回：`[3,9,20,15,7]`\n\n**算法：广度优先搜索（BFS）**\n\n```js\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nvar levelOrder = function (root) {\n    if(!root) return []\n    let queue = [root]\n    let res = []\n    while (queue.length) {\n        let new_node = queue.shift()\n        res.push(new_node.val)\n\t\t// 通过将根节点入队，再获取最前面的根节点出队，将子节点入队实现广度优先搜索（BFS）\n        new_node.left && queue.push(new_node.left)\n        new_node.right && queue.push(new_node.right)\n    }\n    return res\n};\n```\n\n#### [剑指 Offer 32 - II. 从上到下打印二叉树 II](https://leetcode-cn.com/problems/cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof/)\n\n**通过临时数组tmp存储，并且通过倒序方式实现初始队列长度的遍历**\n\n```js\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[][]}\n */\nvar levelOrder = function (root) {\n    if (!root) return []\n    let queue = [root]\n    let res = []\n\n    while (queue.length) {\n        let tmp = []\n        for (let i = queue.length - 1; i >= 0; i--) {\n            let new_node = queue.shift()\n            tmp.push(new_node.val)\n\n            new_node.left && queue.push(new_node.left)\n            new_node.right && queue.push(new_node.right)\n        }\n        res.push(tmp)\n    }\n    return res\n};\n```\n\n#### [剑指 Offer 32 - III. 从上到下打印二叉树 III](https://leetcode-cn.com/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof/)\n\n**通过数组reverse()完成逆序操作**\n\n```js\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[][]}\n */\nvar levelOrder = function (root) {\n    if (!root) return []\n    let queue = [root]\n    let res = []\n    let re = true\n\n    while (queue.length) {\n        let tmp = []\n        for (let i = queue.length - 1; i >= 0; i--) {\n            let new_node = queue.shift()\n            tmp.push(new_node.val)\n\n            new_node.left && queue.push(new_node.left)\n            new_node.right && queue.push(new_node.right)\n        }\n        if (re) {\n            res.push(tmp)\n            re = !re\n        } else {\n            res.push(tmp.reverse())\n            re = !re\n        }\n\n    }\n    return res\n};\n```\n\n#### [剑指 Offer 26. 树的子结构](https://leetcode-cn.com/problems/shu-de-zi-jie-gou-lcof/)\n\n**通过先序遍历进行对比**\n\n```js\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} A\n * @param {TreeNode} B\n * @return {boolean}\n */\nvar flag = true\n\nvar isSubStructure = function (A, B) {\n    if (!B || !A) return false\n    let n = A\n    let stack = [n]\n    while (stack.length) {\n        let n = stack.pop()\n        if (n.val == B.val) {\n            flag = true\n            dfs(n, B)\n            if (flag) return true\n        }\n        n.right && stack.push(n.right)\n        n.left && stack.push(n.left)\n    }\n    return false\n};\n\nvar dfs = function (A, B) {\n    if (!A || !B) return false\n    // console.log(A.val, A.left, B.val, B.left, B.left && !A.left)\n    if (A.val !== B.val) return flag = false\n    if (B.left && !A.left) return flag = false\n    if (B.right && !A.right) return flag = false\n    if (A.left && B.left)\n        dfs(A.left, B.left)\n    if (A.right && B.right)\n        dfs(A.right, B.right)\n}\n```\n\n#### [剑指 Offer 27. 二叉树的镜像](https://leetcode-cn.com/problems/er-cha-shu-de-jing-xiang-lcof/)\n\n```js\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */\nvar mirrorTree = function (root) {\n    if (root === null) {\n        return null;\n    }\n    const left = mirrorTree(root.left);\n    const right = mirrorTree(root.right);\n    root.left = right;\n    root.right = left;\n    return root;\n}\n```\n\n","slug":"Leetcode刷题笔记 2021.08.24","published":1,"date":"2021-08-24T14:30:57.553Z","updated":"2021-09-04T15:39:15.139Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cktehwkp400031svfdpme4ljo","content":"<h1 id=\"Leetcode刷题笔记-2021-08-24\"><a href=\"#Leetcode刷题笔记-2021-08-24\" class=\"headerlink\" title=\"Leetcode刷题笔记 2021.08.24\"></a>Leetcode刷题笔记 2021.08.24</h1><h2 id=\"搜索与回溯算法专题\"><a href=\"#搜索与回溯算法专题\" class=\"headerlink\" title=\"搜索与回溯算法专题\"></a>搜索与回溯算法专题</h2><h3 id=\"基础知识回顾\"><a href=\"#基础知识回顾\" class=\"headerlink\" title=\"基础知识回顾\"></a>基础知识回顾</h3><h4 id=\"树的遍历\"><a href=\"#树的遍历\" class=\"headerlink\" title=\"树的遍历\"></a>树的遍历</h4><p><strong>深度优先遍历（DFS）：</strong></p>\n<ul>\n<li><strong>先序遍历：</strong>先访问节点本身，再访问左侧子节点，最后是右侧子节点</li>\n<li><strong>中序遍历：</strong>先访问左侧子节点，再访问节点本身，最后事右侧子节点</li>\n<li><strong>后序遍历：</strong>先访问左侧子节点，在访问右侧子节点，最后访问节点本身</li>\n</ul>\n<p><strong>广度优先遍历（BFS）：</strong></p>\n<p>通过队列的辅助，每次去除队列头部节点访问该节点并将左右子节点分别压入队列</p>\n<h4 id=\"剑指-Offer-32-I-从上到下打印二叉树\"><a href=\"#剑指-Offer-32-I-从上到下打印二叉树\" class=\"headerlink\" title=\"剑指 Offer 32 - I. 从上到下打印二叉树\"></a><a href=\"https://leetcode-cn.com/problems/cong-shang-dao-xia-da-yin-er-cha-shu-lcof/\">剑指 Offer 32 - I. 从上到下打印二叉树</a></h4><p>从上到下打印出二叉树的每个节点，同一层的节点按照从左到右的顺序打印。</p>\n<p>例如:<br>给定二叉树: <code>[3,9,20,null,null,15,7]</code>，返回：<code>[3,9,20,15,7]</code></p>\n<p><strong>算法：广度优先搜索（BFS）</strong></p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for a binary tree node.</span></span><br><span class=\"line\"><span class=\"comment\"> * function TreeNode(val) {</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.left = this.right = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * }</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{TreeNode}</span> <span class=\"variable\">root</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">{number[]}</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> levelOrder = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">root</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!root) <span class=\"keyword\">return</span> []</span><br><span class=\"line\">    <span class=\"keyword\">let</span> queue = [root]</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = []</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (queue.length) {</span><br><span class=\"line\">        <span class=\"keyword\">let</span> new_node = queue.shift()</span><br><span class=\"line\">        res.push(new_node.val)</span><br><span class=\"line\">\t\t<span class=\"comment\">// 通过将根节点入队，再获取最前面的根节点出队，将子节点入队实现广度优先搜索（BFS）</span></span><br><span class=\"line\">        new_node.left &amp;&amp; queue.push(new_node.left)</span><br><span class=\"line\">        new_node.right &amp;&amp; queue.push(new_node.right)</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<h4 id=\"剑指-Offer-32-II-从上到下打印二叉树-II\"><a href=\"#剑指-Offer-32-II-从上到下打印二叉树-II\" class=\"headerlink\" title=\"剑指 Offer 32 - II. 从上到下打印二叉树 II\"></a><a href=\"https://leetcode-cn.com/problems/cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof/\">剑指 Offer 32 - II. 从上到下打印二叉树 II</a></h4><p><strong>通过临时数组tmp存储，并且通过倒序方式实现初始队列长度的遍历</strong></p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for a binary tree node.</span></span><br><span class=\"line\"><span class=\"comment\"> * function TreeNode(val) {</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.left = this.right = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * }</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{TreeNode}</span> <span class=\"variable\">root</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">{number[][]}</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> levelOrder = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">root</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!root) <span class=\"keyword\">return</span> []</span><br><span class=\"line\">    <span class=\"keyword\">let</span> queue = [root]</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (queue.length) {</span><br><span class=\"line\">        <span class=\"keyword\">let</span> tmp = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = queue.length - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) {</span><br><span class=\"line\">            <span class=\"keyword\">let</span> new_node = queue.shift()</span><br><span class=\"line\">            tmp.push(new_node.val)</span><br><span class=\"line\"></span><br><span class=\"line\">            new_node.left &amp;&amp; queue.push(new_node.left)</span><br><span class=\"line\">            new_node.right &amp;&amp; queue.push(new_node.right)</span><br><span class=\"line\">        }</span><br><span class=\"line\">        res.push(tmp)</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<h4 id=\"剑指-Offer-32-III-从上到下打印二叉树-III\"><a href=\"#剑指-Offer-32-III-从上到下打印二叉树-III\" class=\"headerlink\" title=\"剑指 Offer 32 - III. 从上到下打印二叉树 III\"></a><a href=\"https://leetcode-cn.com/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof/\">剑指 Offer 32 - III. 从上到下打印二叉树 III</a></h4><p><strong>通过数组reverse()完成逆序操作</strong></p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for a binary tree node.</span></span><br><span class=\"line\"><span class=\"comment\"> * function TreeNode(val) {</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.left = this.right = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * }</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{TreeNode}</span> <span class=\"variable\">root</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">{number[][]}</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> levelOrder = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">root</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!root) <span class=\"keyword\">return</span> []</span><br><span class=\"line\">    <span class=\"keyword\">let</span> queue = [root]</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = []</span><br><span class=\"line\">    <span class=\"keyword\">let</span> re = <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (queue.length) {</span><br><span class=\"line\">        <span class=\"keyword\">let</span> tmp = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = queue.length - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) {</span><br><span class=\"line\">            <span class=\"keyword\">let</span> new_node = queue.shift()</span><br><span class=\"line\">            tmp.push(new_node.val)</span><br><span class=\"line\"></span><br><span class=\"line\">            new_node.left &amp;&amp; queue.push(new_node.left)</span><br><span class=\"line\">            new_node.right &amp;&amp; queue.push(new_node.right)</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (re) {</span><br><span class=\"line\">            res.push(tmp)</span><br><span class=\"line\">            re = !re</span><br><span class=\"line\">        } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">            res.push(tmp.reverse())</span><br><span class=\"line\">            re = !re</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<h4 id=\"剑指-Offer-26-树的子结构\"><a href=\"#剑指-Offer-26-树的子结构\" class=\"headerlink\" title=\"剑指 Offer 26. 树的子结构\"></a><a href=\"https://leetcode-cn.com/problems/shu-de-zi-jie-gou-lcof/\">剑指 Offer 26. 树的子结构</a></h4><p><strong>通过先序遍历进行对比</strong></p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for a binary tree node.</span></span><br><span class=\"line\"><span class=\"comment\"> * function TreeNode(val) {</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.left = this.right = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * }</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{TreeNode}</span> <span class=\"variable\">A</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{TreeNode}</span> <span class=\"variable\">B</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">{boolean}</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> flag = <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> isSubStructure = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">A, B</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!B || !A) <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> n = A</span><br><span class=\"line\">    <span class=\"keyword\">let</span> stack = [n]</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (stack.length) {</span><br><span class=\"line\">        <span class=\"keyword\">let</span> n = stack.pop()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n.val == B.val) {</span><br><span class=\"line\">            flag = <span class=\"literal\">true</span></span><br><span class=\"line\">            dfs(n, B)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (flag) <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        }</span><br><span class=\"line\">        n.right &amp;&amp; stack.push(n.right)</span><br><span class=\"line\">        n.left &amp;&amp; stack.push(n.left)</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">};</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> dfs = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">A, B</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!A || !B) <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"comment\">// console.log(A.val, A.left, B.val, B.left, B.left &amp;&amp; !A.left)</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (A.val !== B.val) <span class=\"keyword\">return</span> flag = <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (B.left &amp;&amp; !A.left) <span class=\"keyword\">return</span> flag = <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (B.right &amp;&amp; !A.right) <span class=\"keyword\">return</span> flag = <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (A.left &amp;&amp; B.left)</span><br><span class=\"line\">        dfs(A.left, B.left)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (A.right &amp;&amp; B.right)</span><br><span class=\"line\">        dfs(A.right, B.right)</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n\n<h4 id=\"剑指-Offer-27-二叉树的镜像\"><a href=\"#剑指-Offer-27-二叉树的镜像\" class=\"headerlink\" title=\"剑指 Offer 27. 二叉树的镜像\"></a><a href=\"https://leetcode-cn.com/problems/er-cha-shu-de-jing-xiang-lcof/\">剑指 Offer 27. 二叉树的镜像</a></h4><figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for a binary tree node.</span></span><br><span class=\"line\"><span class=\"comment\"> * function TreeNode(val) {</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.left = this.right = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * }</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{TreeNode}</span> <span class=\"variable\">root</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">{TreeNode}</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mirrorTree = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">root</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (root === <span class=\"literal\">null</span>) {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">const</span> left = mirrorTree(root.left);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> right = mirrorTree(root.right);</span><br><span class=\"line\">    root.left = right;</span><br><span class=\"line\">    root.right = left;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> root;</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<h1 id=\"Leetcode刷题笔记-2021-08-24\"><a href=\"#Leetcode刷题笔记-2021-08-24\" class=\"headerlink\" title=\"Leetcode刷题笔记 2021.08.24\"></a>Leetcode刷题笔记 2021.08.24</h1><h2 id=\"搜索与回溯算法专题\"><a href=\"#搜索与回溯算法专题\" class=\"headerlink\" title=\"搜索与回溯算法专题\"></a>搜索与回溯算法专题</h2><h3 id=\"基础知识回顾\"><a href=\"#基础知识回顾\" class=\"headerlink\" title=\"基础知识回顾\"></a>基础知识回顾</h3><h4 id=\"树的遍历\"><a href=\"#树的遍历\" class=\"headerlink\" title=\"树的遍历\"></a>树的遍历</h4><p><strong>深度优先遍历（DFS）：</strong></p>\n<ul>\n<li><strong>先序遍历：</strong>先访问节点本身，再访问左侧子节点，最后是右侧子节点</li>\n<li><strong>中序遍历：</strong>先访问左侧子节点，再访问节点本身，最后事右侧子节点</li>\n<li><strong>后序遍历：</strong>先访问左侧子节点，在访问右侧子节点，最后访问节点本身</li>\n</ul>\n<p><strong>广度优先遍历（BFS）：</strong></p>\n<p>通过队列的辅助，每次去除队列头部节点访问该节点并将左右子节点分别压入队列</p>\n<h4 id=\"剑指-Offer-32-I-从上到下打印二叉树\"><a href=\"#剑指-Offer-32-I-从上到下打印二叉树\" class=\"headerlink\" title=\"剑指 Offer 32 - I. 从上到下打印二叉树\"></a><a href=\"https://leetcode-cn.com/problems/cong-shang-dao-xia-da-yin-er-cha-shu-lcof/\">剑指 Offer 32 - I. 从上到下打印二叉树</a></h4><p>从上到下打印出二叉树的每个节点，同一层的节点按照从左到右的顺序打印。</p>\n<p>例如:<br>给定二叉树: <code>[3,9,20,null,null,15,7]</code>，返回：<code>[3,9,20,15,7]</code></p>\n<p><strong>算法：广度优先搜索（BFS）</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for a binary tree node.</span></span><br><span class=\"line\"><span class=\"comment\"> * function TreeNode(val) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.left = this.right = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;TreeNode&#125;</span> <span class=\"variable\">root</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number[]&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> levelOrder = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">root</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!root) <span class=\"keyword\">return</span> []</span><br><span class=\"line\">    <span class=\"keyword\">let</span> queue = [root]</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = []</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (queue.length) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> new_node = queue.shift()</span><br><span class=\"line\">        res.push(new_node.val)</span><br><span class=\"line\">\t\t<span class=\"comment\">// 通过将根节点入队，再获取最前面的根节点出队，将子节点入队实现广度优先搜索（BFS）</span></span><br><span class=\"line\">        new_node.left &amp;&amp; queue.push(new_node.left)</span><br><span class=\"line\">        new_node.right &amp;&amp; queue.push(new_node.right)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"剑指-Offer-32-II-从上到下打印二叉树-II\"><a href=\"#剑指-Offer-32-II-从上到下打印二叉树-II\" class=\"headerlink\" title=\"剑指 Offer 32 - II. 从上到下打印二叉树 II\"></a><a href=\"https://leetcode-cn.com/problems/cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof/\">剑指 Offer 32 - II. 从上到下打印二叉树 II</a></h4><p><strong>通过临时数组tmp存储，并且通过倒序方式实现初始队列长度的遍历</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for a binary tree node.</span></span><br><span class=\"line\"><span class=\"comment\"> * function TreeNode(val) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.left = this.right = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;TreeNode&#125;</span> <span class=\"variable\">root</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number[][]&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> levelOrder = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">root</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!root) <span class=\"keyword\">return</span> []</span><br><span class=\"line\">    <span class=\"keyword\">let</span> queue = [root]</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (queue.length) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> tmp = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = queue.length - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> new_node = queue.shift()</span><br><span class=\"line\">            tmp.push(new_node.val)</span><br><span class=\"line\"></span><br><span class=\"line\">            new_node.left &amp;&amp; queue.push(new_node.left)</span><br><span class=\"line\">            new_node.right &amp;&amp; queue.push(new_node.right)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        res.push(tmp)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"剑指-Offer-32-III-从上到下打印二叉树-III\"><a href=\"#剑指-Offer-32-III-从上到下打印二叉树-III\" class=\"headerlink\" title=\"剑指 Offer 32 - III. 从上到下打印二叉树 III\"></a><a href=\"https://leetcode-cn.com/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof/\">剑指 Offer 32 - III. 从上到下打印二叉树 III</a></h4><p><strong>通过数组reverse()完成逆序操作</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for a binary tree node.</span></span><br><span class=\"line\"><span class=\"comment\"> * function TreeNode(val) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.left = this.right = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;TreeNode&#125;</span> <span class=\"variable\">root</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number[][]&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> levelOrder = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">root</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!root) <span class=\"keyword\">return</span> []</span><br><span class=\"line\">    <span class=\"keyword\">let</span> queue = [root]</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = []</span><br><span class=\"line\">    <span class=\"keyword\">let</span> re = <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (queue.length) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> tmp = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = queue.length - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> new_node = queue.shift()</span><br><span class=\"line\">            tmp.push(new_node.val)</span><br><span class=\"line\"></span><br><span class=\"line\">            new_node.left &amp;&amp; queue.push(new_node.left)</span><br><span class=\"line\">            new_node.right &amp;&amp; queue.push(new_node.right)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (re) &#123;</span><br><span class=\"line\">            res.push(tmp)</span><br><span class=\"line\">            re = !re</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            res.push(tmp.reverse())</span><br><span class=\"line\">            re = !re</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"剑指-Offer-26-树的子结构\"><a href=\"#剑指-Offer-26-树的子结构\" class=\"headerlink\" title=\"剑指 Offer 26. 树的子结构\"></a><a href=\"https://leetcode-cn.com/problems/shu-de-zi-jie-gou-lcof/\">剑指 Offer 26. 树的子结构</a></h4><p><strong>通过先序遍历进行对比</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for a binary tree node.</span></span><br><span class=\"line\"><span class=\"comment\"> * function TreeNode(val) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.left = this.right = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;TreeNode&#125;</span> <span class=\"variable\">A</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;TreeNode&#125;</span> <span class=\"variable\">B</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;boolean&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> flag = <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> isSubStructure = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">A, B</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!B || !A) <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> n = A</span><br><span class=\"line\">    <span class=\"keyword\">let</span> stack = [n]</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (stack.length) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> n = stack.pop()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n.val == B.val) &#123;</span><br><span class=\"line\">            flag = <span class=\"literal\">true</span></span><br><span class=\"line\">            dfs(n, B)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (flag) <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        n.right &amp;&amp; stack.push(n.right)</span><br><span class=\"line\">        n.left &amp;&amp; stack.push(n.left)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> dfs = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">A, B</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!A || !B) <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"comment\">// console.log(A.val, A.left, B.val, B.left, B.left &amp;&amp; !A.left)</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (A.val !== B.val) <span class=\"keyword\">return</span> flag = <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (B.left &amp;&amp; !A.left) <span class=\"keyword\">return</span> flag = <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (B.right &amp;&amp; !A.right) <span class=\"keyword\">return</span> flag = <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (A.left &amp;&amp; B.left)</span><br><span class=\"line\">        dfs(A.left, B.left)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (A.right &amp;&amp; B.right)</span><br><span class=\"line\">        dfs(A.right, B.right)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"剑指-Offer-27-二叉树的镜像\"><a href=\"#剑指-Offer-27-二叉树的镜像\" class=\"headerlink\" title=\"剑指 Offer 27. 二叉树的镜像\"></a><a href=\"https://leetcode-cn.com/problems/er-cha-shu-de-jing-xiang-lcof/\">剑指 Offer 27. 二叉树的镜像</a></h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for a binary tree node.</span></span><br><span class=\"line\"><span class=\"comment\"> * function TreeNode(val) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.left = this.right = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;TreeNode&#125;</span> <span class=\"variable\">root</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;TreeNode&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mirrorTree = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">root</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (root === <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> left = mirrorTree(root.left);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> right = mirrorTree(root.right);</span><br><span class=\"line\">    root.left = right;</span><br><span class=\"line\">    root.right = left;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> root;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Leetcode刷题笔记 2021.08.26","_content":"# Leetcode刷题笔记 2021.08.26\n\n## 动态规划（简单）\n\n#### [剑指 Offer 28. 对称的二叉树](https://leetcode-cn.com/problems/dui-cheng-de-er-cha-shu-lcof/)\n\n**通过每层存入数组，在头尾比较是否相同判断是否为对称二叉树**\n\n```js\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {boolean}\n */\nvar isSymmetric = function (root) {\n    let queue = [root]\n    while (queue.length) {\n        let compare = []\n        for (let i = queue.length - 1; i >= 0; i--) {\n            let n = queue.shift()\n            if (n !== null) {\n                compare.push(n.val)\n                // console.log(i)\n                // console.log(n.left, n.right)\n                if (!n.left) {\n                    queue.push(null)\n                    // console.log('left: ' + null)\n                } else {\n                    // console.log('left: ' + n.left.val)\n                    queue.push(n.left)\n                }\n                if (!n.right) {\n                    queue.push(null)\n                    // console.log('right: ' + null)\n                } else {\n                    // console.log('right: ' + n.right.val)\n                    queue.push(n.right)\n                }\n            } else {\n                compare.push(null)\n            }\n        }\n        let start = 0\n        let end = compare.length - 1\n        // console.log(compare)\n        while (compare.length > 1 && start <= end) {\n            // console.log(compare[start], compare[end])\n            if (compare[start] !== compare[end]) {\n                return false\n            }\n            start++\n            end--\n        }\n    }\n    return true\n};\n```\n\n#### [剑指 Offer 10- I. 斐波那契数列](https://leetcode-cn.com/problems/fei-bo-na-qi-shu-lie-lcof/)\n\n**通过递归实现，但是简单的递归如果深度过大，就会导致栈溢出，因此选择通过动态规划解决栈溢出问题**\n\n```js\n/**\n * @param {number} n\n * @return {number}\n */\nvar fib = function (n) {\n    let n1 = 0\n    let n2 = 1\n    for (let i = 0; i < n; i++) {\n        let sum = (n1 + n2) % 1000000007\n        n1 = n2\n        n2 = sum\n    }\n    return n1\n};\n```\n\n#### [剑指 Offer 10- II. 青蛙跳台阶问题](https://leetcode-cn.com/problems/qing-wa-tiao-tai-jie-wen-ti-lcof/)\n\n**斐波那契数列衍生问题**\n\n```js\n/**\n * @param {number} n\n * @return {number}\n */\nvar numWays = function(n) {\n    let n0 = 1\n    let n1 = 1\n    for(let i=0; i<n; i++){\n        let sum = (n0+n1) % 1000000007\n        n0 = n1\n        n1 = sum\n    }\n    return n0\n};\n```\n\n#### [剑指 Offer 63. 股票的最大利润](https://leetcode-cn.com/problems/gu-piao-de-zui-da-li-run-lcof/)\n\n**遍历找出最大利润（暴力法）**\n\n```js\n/**\n * @param {number[]} prices\n * @return {number}\n */\nvar maxProfit = function (prices) {\n    let res = 0\n    \n    for (let i = 0; i < prices.length; i++) {\n        for (let j = 0; j < prices.length; j++) {\n            if (i >= j) {\n                continue\n            }\n            if (prices[i] > prices[j]) {\n                continue\n            }\n            if(prices[j] - prices[i]>res) {\n                res = prices[j] - prices[i]\n            }\n        }\n    }\n    \n    return res\n};\n```\n\n**找出历史最低点，再计算当天和历史最低点计算的最大利润**\n\n```js\nvar maxProfit = function(prices) {\n    let minprice = Number.MAX_VALUE;\n    let maxprofit = 0;\n    for (const price of prices) {\n        maxprofit = Math.max(price - minprice, maxprofit);\n        minprice = Math.min(price, minprice);\n    }\n    return maxprofit;\n};\n```\n\n\n\n","source":"_posts/Leetcode刷题笔记 2021.08.26.md","raw":"---\ntitle: Leetcode刷题笔记 2021.08.26\ntag: ['leetcode', '动态规划']\ncategories: \n- leetcode\n- dp\n---\n# Leetcode刷题笔记 2021.08.26\n\n## 动态规划（简单）\n\n#### [剑指 Offer 28. 对称的二叉树](https://leetcode-cn.com/problems/dui-cheng-de-er-cha-shu-lcof/)\n\n**通过每层存入数组，在头尾比较是否相同判断是否为对称二叉树**\n\n```js\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {boolean}\n */\nvar isSymmetric = function (root) {\n    let queue = [root]\n    while (queue.length) {\n        let compare = []\n        for (let i = queue.length - 1; i >= 0; i--) {\n            let n = queue.shift()\n            if (n !== null) {\n                compare.push(n.val)\n                // console.log(i)\n                // console.log(n.left, n.right)\n                if (!n.left) {\n                    queue.push(null)\n                    // console.log('left: ' + null)\n                } else {\n                    // console.log('left: ' + n.left.val)\n                    queue.push(n.left)\n                }\n                if (!n.right) {\n                    queue.push(null)\n                    // console.log('right: ' + null)\n                } else {\n                    // console.log('right: ' + n.right.val)\n                    queue.push(n.right)\n                }\n            } else {\n                compare.push(null)\n            }\n        }\n        let start = 0\n        let end = compare.length - 1\n        // console.log(compare)\n        while (compare.length > 1 && start <= end) {\n            // console.log(compare[start], compare[end])\n            if (compare[start] !== compare[end]) {\n                return false\n            }\n            start++\n            end--\n        }\n    }\n    return true\n};\n```\n\n#### [剑指 Offer 10- I. 斐波那契数列](https://leetcode-cn.com/problems/fei-bo-na-qi-shu-lie-lcof/)\n\n**通过递归实现，但是简单的递归如果深度过大，就会导致栈溢出，因此选择通过动态规划解决栈溢出问题**\n\n```js\n/**\n * @param {number} n\n * @return {number}\n */\nvar fib = function (n) {\n    let n1 = 0\n    let n2 = 1\n    for (let i = 0; i < n; i++) {\n        let sum = (n1 + n2) % 1000000007\n        n1 = n2\n        n2 = sum\n    }\n    return n1\n};\n```\n\n#### [剑指 Offer 10- II. 青蛙跳台阶问题](https://leetcode-cn.com/problems/qing-wa-tiao-tai-jie-wen-ti-lcof/)\n\n**斐波那契数列衍生问题**\n\n```js\n/**\n * @param {number} n\n * @return {number}\n */\nvar numWays = function(n) {\n    let n0 = 1\n    let n1 = 1\n    for(let i=0; i<n; i++){\n        let sum = (n0+n1) % 1000000007\n        n0 = n1\n        n1 = sum\n    }\n    return n0\n};\n```\n\n#### [剑指 Offer 63. 股票的最大利润](https://leetcode-cn.com/problems/gu-piao-de-zui-da-li-run-lcof/)\n\n**遍历找出最大利润（暴力法）**\n\n```js\n/**\n * @param {number[]} prices\n * @return {number}\n */\nvar maxProfit = function (prices) {\n    let res = 0\n    \n    for (let i = 0; i < prices.length; i++) {\n        for (let j = 0; j < prices.length; j++) {\n            if (i >= j) {\n                continue\n            }\n            if (prices[i] > prices[j]) {\n                continue\n            }\n            if(prices[j] - prices[i]>res) {\n                res = prices[j] - prices[i]\n            }\n        }\n    }\n    \n    return res\n};\n```\n\n**找出历史最低点，再计算当天和历史最低点计算的最大利润**\n\n```js\nvar maxProfit = function(prices) {\n    let minprice = Number.MAX_VALUE;\n    let maxprofit = 0;\n    for (const price of prices) {\n        maxprofit = Math.max(price - minprice, maxprofit);\n        minprice = Math.min(price, minprice);\n    }\n    return maxprofit;\n};\n```\n\n\n\n","slug":"Leetcode刷题笔记 2021.08.26","published":1,"date":"2021-08-26T12:42:46.222Z","updated":"2021-08-26T12:43:48.982Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cktehwkp800071svfaz6wby60","content":"<h1 id=\"Leetcode刷题笔记-2021-08-26\"><a href=\"#Leetcode刷题笔记-2021-08-26\" class=\"headerlink\" title=\"Leetcode刷题笔记 2021.08.26\"></a>Leetcode刷题笔记 2021.08.26</h1><h2 id=\"动态规划（简单）\"><a href=\"#动态规划（简单）\" class=\"headerlink\" title=\"动态规划（简单）\"></a>动态规划（简单）</h2><h4 id=\"剑指-Offer-28-对称的二叉树\"><a href=\"#剑指-Offer-28-对称的二叉树\" class=\"headerlink\" title=\"剑指 Offer 28. 对称的二叉树\"></a><a href=\"https://leetcode-cn.com/problems/dui-cheng-de-er-cha-shu-lcof/\">剑指 Offer 28. 对称的二叉树</a></h4><p><strong>通过每层存入数组，在头尾比较是否相同判断是否为对称二叉树</strong></p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for a binary tree node.</span></span><br><span class=\"line\"><span class=\"comment\"> * function TreeNode(val) {</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.left = this.right = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * }</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{TreeNode}</span> <span class=\"variable\">root</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">{boolean}</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> isSymmetric = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">root</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">let</span> queue = [root]</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (queue.length) {</span><br><span class=\"line\">        <span class=\"keyword\">let</span> compare = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = queue.length - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) {</span><br><span class=\"line\">            <span class=\"keyword\">let</span> n = queue.shift()</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (n !== <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                compare.push(n.val)</span><br><span class=\"line\">                <span class=\"comment\">// console.log(i)</span></span><br><span class=\"line\">                <span class=\"comment\">// console.log(n.left, n.right)</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!n.left) {</span><br><span class=\"line\">                    queue.push(<span class=\"literal\">null</span>)</span><br><span class=\"line\">                    <span class=\"comment\">// console.log('left: ' + null)</span></span><br><span class=\"line\">                } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                    <span class=\"comment\">// console.log('left: ' + n.left.val)</span></span><br><span class=\"line\">                    queue.push(n.left)</span><br><span class=\"line\">                }</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!n.right) {</span><br><span class=\"line\">                    queue.push(<span class=\"literal\">null</span>)</span><br><span class=\"line\">                    <span class=\"comment\">// console.log('right: ' + null)</span></span><br><span class=\"line\">                } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                    <span class=\"comment\">// console.log('right: ' + n.right.val)</span></span><br><span class=\"line\">                    queue.push(n.right)</span><br><span class=\"line\">                }</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                compare.push(<span class=\"literal\">null</span>)</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">let</span> start = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> end = compare.length - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\">// console.log(compare)</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (compare.length &gt; <span class=\"number\">1</span> &amp;&amp; start &lt;= end) {</span><br><span class=\"line\">            <span class=\"comment\">// console.log(compare[start], compare[end])</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (compare[start] !== compare[end]) {</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">            }</span><br><span class=\"line\">            start++</span><br><span class=\"line\">            end--</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<h4 id=\"剑指-Offer-10-I-斐波那契数列\"><a href=\"#剑指-Offer-10-I-斐波那契数列\" class=\"headerlink\" title=\"剑指 Offer 10- I. 斐波那契数列\"></a><a href=\"https://leetcode-cn.com/problems/fei-bo-na-qi-shu-lie-lcof/\">剑指 Offer 10- I. 斐波那契数列</a></h4><p><strong>通过递归实现，但是简单的递归如果深度过大，就会导致栈溢出，因此选择通过动态规划解决栈溢出问题</strong></p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{number}</span> <span class=\"variable\">n</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">{number}</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fib = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">n</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">let</span> n1 = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> n2 = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n; i++) {</span><br><span class=\"line\">        <span class=\"keyword\">let</span> sum = (n1 + n2) % <span class=\"number\">1000000007</span></span><br><span class=\"line\">        n1 = n2</span><br><span class=\"line\">        n2 = sum</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> n1</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<h4 id=\"剑指-Offer-10-II-青蛙跳台阶问题\"><a href=\"#剑指-Offer-10-II-青蛙跳台阶问题\" class=\"headerlink\" title=\"剑指 Offer 10- II. 青蛙跳台阶问题\"></a><a href=\"https://leetcode-cn.com/problems/qing-wa-tiao-tai-jie-wen-ti-lcof/\">剑指 Offer 10- II. 青蛙跳台阶问题</a></h4><p><strong>斐波那契数列衍生问题</strong></p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{number}</span> <span class=\"variable\">n</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">{number}</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> numWays = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">n</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">let</span> n0 = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> n1 = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>; i&lt;n; i++){</span><br><span class=\"line\">        <span class=\"keyword\">let</span> sum = (n0+n1) % <span class=\"number\">1000000007</span></span><br><span class=\"line\">        n0 = n1</span><br><span class=\"line\">        n1 = sum</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> n0</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<h4 id=\"剑指-Offer-63-股票的最大利润\"><a href=\"#剑指-Offer-63-股票的最大利润\" class=\"headerlink\" title=\"剑指 Offer 63. 股票的最大利润\"></a><a href=\"https://leetcode-cn.com/problems/gu-piao-de-zui-da-li-run-lcof/\">剑指 Offer 63. 股票的最大利润</a></h4><p><strong>遍历找出最大利润（暴力法）</strong></p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{number[]}</span> <span class=\"variable\">prices</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">{number}</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">prices</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = <span class=\"number\">0</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; prices.length; i++) {</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; prices.length; j++) {</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &gt;= j) {</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            }</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (prices[i] &gt; prices[j]) {</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            }</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(prices[j] - prices[i]&gt;res) {</span><br><span class=\"line\">                res = prices[j] - prices[i]</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<p><strong>找出历史最低点，再计算当天和历史最低点计算的最大利润</strong></p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">prices</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">let</span> minprice = <span class=\"built_in\">Number</span>.MAX_VALUE;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> maxprofit = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> price <span class=\"keyword\">of</span> prices) {</span><br><span class=\"line\">        maxprofit = <span class=\"built_in\">Math</span>.max(price - minprice, maxprofit);</span><br><span class=\"line\">        minprice = <span class=\"built_in\">Math</span>.min(price, minprice);</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> maxprofit;</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n\n\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<h1 id=\"Leetcode刷题笔记-2021-08-26\"><a href=\"#Leetcode刷题笔记-2021-08-26\" class=\"headerlink\" title=\"Leetcode刷题笔记 2021.08.26\"></a>Leetcode刷题笔记 2021.08.26</h1><h2 id=\"动态规划（简单）\"><a href=\"#动态规划（简单）\" class=\"headerlink\" title=\"动态规划（简单）\"></a>动态规划（简单）</h2><h4 id=\"剑指-Offer-28-对称的二叉树\"><a href=\"#剑指-Offer-28-对称的二叉树\" class=\"headerlink\" title=\"剑指 Offer 28. 对称的二叉树\"></a><a href=\"https://leetcode-cn.com/problems/dui-cheng-de-er-cha-shu-lcof/\">剑指 Offer 28. 对称的二叉树</a></h4><p><strong>通过每层存入数组，在头尾比较是否相同判断是否为对称二叉树</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for a binary tree node.</span></span><br><span class=\"line\"><span class=\"comment\"> * function TreeNode(val) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.left = this.right = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;TreeNode&#125;</span> <span class=\"variable\">root</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;boolean&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> isSymmetric = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">root</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> queue = [root]</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (queue.length) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> compare = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = queue.length - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> n = queue.shift()</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (n !== <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                compare.push(n.val)</span><br><span class=\"line\">                <span class=\"comment\">// console.log(i)</span></span><br><span class=\"line\">                <span class=\"comment\">// console.log(n.left, n.right)</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!n.left) &#123;</span><br><span class=\"line\">                    queue.push(<span class=\"literal\">null</span>)</span><br><span class=\"line\">                    <span class=\"comment\">// console.log(&#x27;left: &#x27; + null)</span></span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// console.log(&#x27;left: &#x27; + n.left.val)</span></span><br><span class=\"line\">                    queue.push(n.left)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!n.right) &#123;</span><br><span class=\"line\">                    queue.push(<span class=\"literal\">null</span>)</span><br><span class=\"line\">                    <span class=\"comment\">// console.log(&#x27;right: &#x27; + null)</span></span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// console.log(&#x27;right: &#x27; + n.right.val)</span></span><br><span class=\"line\">                    queue.push(n.right)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                compare.push(<span class=\"literal\">null</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> start = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> end = compare.length - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\">// console.log(compare)</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (compare.length &gt; <span class=\"number\">1</span> &amp;&amp; start &lt;= end) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// console.log(compare[start], compare[end])</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (compare[start] !== compare[end]) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            start++</span><br><span class=\"line\">            end--</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"剑指-Offer-10-I-斐波那契数列\"><a href=\"#剑指-Offer-10-I-斐波那契数列\" class=\"headerlink\" title=\"剑指 Offer 10- I. 斐波那契数列\"></a><a href=\"https://leetcode-cn.com/problems/fei-bo-na-qi-shu-lie-lcof/\">剑指 Offer 10- I. 斐波那契数列</a></h4><p><strong>通过递归实现，但是简单的递归如果深度过大，就会导致栈溢出，因此选择通过动态规划解决栈溢出问题</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number&#125;</span> <span class=\"variable\">n</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fib = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">n</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> n1 = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> n2 = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> sum = (n1 + n2) % <span class=\"number\">1000000007</span></span><br><span class=\"line\">        n1 = n2</span><br><span class=\"line\">        n2 = sum</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> n1</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"剑指-Offer-10-II-青蛙跳台阶问题\"><a href=\"#剑指-Offer-10-II-青蛙跳台阶问题\" class=\"headerlink\" title=\"剑指 Offer 10- II. 青蛙跳台阶问题\"></a><a href=\"https://leetcode-cn.com/problems/qing-wa-tiao-tai-jie-wen-ti-lcof/\">剑指 Offer 10- II. 青蛙跳台阶问题</a></h4><p><strong>斐波那契数列衍生问题</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number&#125;</span> <span class=\"variable\">n</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> numWays = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">n</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> n0 = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> n1 = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>; i&lt;n; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> sum = (n0+n1) % <span class=\"number\">1000000007</span></span><br><span class=\"line\">        n0 = n1</span><br><span class=\"line\">        n1 = sum</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> n0</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"剑指-Offer-63-股票的最大利润\"><a href=\"#剑指-Offer-63-股票的最大利润\" class=\"headerlink\" title=\"剑指 Offer 63. 股票的最大利润\"></a><a href=\"https://leetcode-cn.com/problems/gu-piao-de-zui-da-li-run-lcof/\">剑指 Offer 63. 股票的最大利润</a></h4><p><strong>遍历找出最大利润（暴力法）</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number[]&#125;</span> <span class=\"variable\">prices</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">prices</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = <span class=\"number\">0</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; prices.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; prices.length; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &gt;= j) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (prices[i] &gt; prices[j]) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(prices[j] - prices[i]&gt;res) &#123;</span><br><span class=\"line\">                res = prices[j] - prices[i]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><strong>找出历史最低点，再计算当天和历史最低点计算的最大利润</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">prices</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> minprice = <span class=\"built_in\">Number</span>.MAX_VALUE;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> maxprofit = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> price <span class=\"keyword\">of</span> prices) &#123;</span><br><span class=\"line\">        maxprofit = <span class=\"built_in\">Math</span>.max(price - minprice, maxprofit);</span><br><span class=\"line\">        minprice = <span class=\"built_in\">Math</span>.min(price, minprice);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> maxprofit;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n"},{"title":"Leetcode刷题笔记 2021.08.28","_content":"# Leetcode刷题笔记 2021.08.28\n\n## 动态规划（中等）\n\n#### [剑指 Offer 42. 连续子数组的最大和](https://leetcode-cn.com/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof/)\n\n**尝试通过暴力解法，最后TLE**\n\n```js\n/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n    let res = -Infinity\n    for (let i = 0; i < nums.length; i++) {\n        for (let j = i; j < nums.length; j++) {\n            if (i == j) {\n                if (nums[i] > res) {\n                    res = nums[i]\n\n                }\n            } else {\n                let sum = 0\n                for (let k = i; k <= j; k++) {\n                    sum += nums[k]\n                }\n                if(sum>res) {\n                    res = sum\n                }\n            }\n        }\n    }\n    return res\n};\n```\n\n**通过动态规划求解**\n\n- **状态定义：dp[i]表示以nums[i]结尾的连续子数组的最大和**\n\n- **状态转移方程：**\n  - **dp[i - 1] > 0, dp[i] = dp[i - 1] + nums[i]**\n  - **dp[i - 1] <=0, dp[i] = nums[i]**\n- **初始化：dp[0] = nums[0]**\n- **输出：max(dp)**\n\n```js\n/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n    let len = nums.length\n    let dp = []\n    dp[0] = nums[0]\n    for (let i = 1; i < len; i++) {\n        if (dp[i - 1] > 0) {\n            dp[i] = dp[i - 1] + nums[i]\n        } else {\n            dp[i] = nums[i]\n        }\n    }\n    let res = -Infinity\n    for (let i = 0; i < len; i++) {\n        if (dp[i] > res) res = dp[i]\n    }\n    return res\n\n};\n```\n\n#### [剑指 Offer 47. 礼物的最大价值](https://leetcode-cn.com/problems/li-wu-de-zui-da-jie-zhi-lcof/)\n\n**动态规划：**\n\n- **状态定义：dp\\[i\\]\\[j\\]表示第i行、第j列拿到最多价值礼物**\n- **状态转移方程：**\n  - **dp\\[i][j] = max(dp\\[i-1][j], dp\\[i][j-1]) + grid\\[i][j]**\n- **初始化：dp\\[0][0] = grid\\[0][0]**\n\n```js\n/**\n * @param {number[][]} grid\n * @return {number}\n */\nvar maxValue = function (grid) {\n    let m = grid.length\n    let n = grid[0].length\n    let dp = Array.from(Array(m), () => Array(n))\n    let res = 0\n    for (let i = 0; i < grid.length; i++) {\n        for (let j = 0; j < grid[i].length; j++) {\n            if (i - 1 < 0 && j - 1 < 0) {\n                dp[i][j] = grid[i][j]\n                // console.log(dp[i][j], i, j)\n                res = Math.max(dp[i][j], res)\n                continue\n            }\n            if (i - 1 < 0) {                \n                dp[i][j] = dp[i][j - 1] + grid[i][j]\n                // console.log(dp[i][j], i, j)\n                res = Math.max(dp[i][j], res)\n                continue\n            }\n            if (j - 1 < 0) {\n                dp[i][j] = dp[i - 1][j] + grid[i][j]\n                // console.log(dp[i][j], i, j)\n                res = Math.max(dp[i][j], res)\n                continue\n            }           \n            dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]) + grid[i][j]\n            // console.log(dp[i][j], i, j)\n            res = Math.max(dp[i][j], res)\n        }\n    }\n    return res\n};\n```\n\n","source":"_posts/Leetcode刷题笔记 2021.08.28.md","raw":"---\ntitle: Leetcode刷题笔记 2021.08.28\ntag: ['leetcode', '动态规划']\ncategories: \n- leetcode\n- dp\n---\n# Leetcode刷题笔记 2021.08.28\n\n## 动态规划（中等）\n\n#### [剑指 Offer 42. 连续子数组的最大和](https://leetcode-cn.com/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof/)\n\n**尝试通过暴力解法，最后TLE**\n\n```js\n/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n    let res = -Infinity\n    for (let i = 0; i < nums.length; i++) {\n        for (let j = i; j < nums.length; j++) {\n            if (i == j) {\n                if (nums[i] > res) {\n                    res = nums[i]\n\n                }\n            } else {\n                let sum = 0\n                for (let k = i; k <= j; k++) {\n                    sum += nums[k]\n                }\n                if(sum>res) {\n                    res = sum\n                }\n            }\n        }\n    }\n    return res\n};\n```\n\n**通过动态规划求解**\n\n- **状态定义：dp[i]表示以nums[i]结尾的连续子数组的最大和**\n\n- **状态转移方程：**\n  - **dp[i - 1] > 0, dp[i] = dp[i - 1] + nums[i]**\n  - **dp[i - 1] <=0, dp[i] = nums[i]**\n- **初始化：dp[0] = nums[0]**\n- **输出：max(dp)**\n\n```js\n/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n    let len = nums.length\n    let dp = []\n    dp[0] = nums[0]\n    for (let i = 1; i < len; i++) {\n        if (dp[i - 1] > 0) {\n            dp[i] = dp[i - 1] + nums[i]\n        } else {\n            dp[i] = nums[i]\n        }\n    }\n    let res = -Infinity\n    for (let i = 0; i < len; i++) {\n        if (dp[i] > res) res = dp[i]\n    }\n    return res\n\n};\n```\n\n#### [剑指 Offer 47. 礼物的最大价值](https://leetcode-cn.com/problems/li-wu-de-zui-da-jie-zhi-lcof/)\n\n**动态规划：**\n\n- **状态定义：dp\\[i\\]\\[j\\]表示第i行、第j列拿到最多价值礼物**\n- **状态转移方程：**\n  - **dp\\[i][j] = max(dp\\[i-1][j], dp\\[i][j-1]) + grid\\[i][j]**\n- **初始化：dp\\[0][0] = grid\\[0][0]**\n\n```js\n/**\n * @param {number[][]} grid\n * @return {number}\n */\nvar maxValue = function (grid) {\n    let m = grid.length\n    let n = grid[0].length\n    let dp = Array.from(Array(m), () => Array(n))\n    let res = 0\n    for (let i = 0; i < grid.length; i++) {\n        for (let j = 0; j < grid[i].length; j++) {\n            if (i - 1 < 0 && j - 1 < 0) {\n                dp[i][j] = grid[i][j]\n                // console.log(dp[i][j], i, j)\n                res = Math.max(dp[i][j], res)\n                continue\n            }\n            if (i - 1 < 0) {                \n                dp[i][j] = dp[i][j - 1] + grid[i][j]\n                // console.log(dp[i][j], i, j)\n                res = Math.max(dp[i][j], res)\n                continue\n            }\n            if (j - 1 < 0) {\n                dp[i][j] = dp[i - 1][j] + grid[i][j]\n                // console.log(dp[i][j], i, j)\n                res = Math.max(dp[i][j], res)\n                continue\n            }           \n            dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]) + grid[i][j]\n            // console.log(dp[i][j], i, j)\n            res = Math.max(dp[i][j], res)\n        }\n    }\n    return res\n};\n```\n\n","slug":"Leetcode刷题笔记 2021.08.28","published":1,"date":"2021-08-28T16:41:46.020Z","updated":"2021-08-28T16:42:16.943Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cktehwkpa00091svfey066svw","content":"<h1 id=\"Leetcode刷题笔记-2021-08-28\"><a href=\"#Leetcode刷题笔记-2021-08-28\" class=\"headerlink\" title=\"Leetcode刷题笔记 2021.08.28\"></a>Leetcode刷题笔记 2021.08.28</h1><h2 id=\"动态规划（中等）\"><a href=\"#动态规划（中等）\" class=\"headerlink\" title=\"动态规划（中等）\"></a>动态规划（中等）</h2><h4 id=\"剑指-Offer-42-连续子数组的最大和\"><a href=\"#剑指-Offer-42-连续子数组的最大和\" class=\"headerlink\" title=\"剑指 Offer 42. 连续子数组的最大和\"></a><a href=\"https://leetcode-cn.com/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof/\">剑指 Offer 42. 连续子数组的最大和</a></h4><p><strong>尝试通过暴力解法，最后TLE</strong></p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{number[]}</span> <span class=\"variable\">nums</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">{number}</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxSubArray = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">nums</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = -<span class=\"literal\">Infinity</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; nums.length; i++) {</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = i; j &lt; nums.length; j++) {</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i == j) {</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (nums[i] &gt; res) {</span><br><span class=\"line\">                    res = nums[i]</span><br><span class=\"line\"></span><br><span class=\"line\">                }</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> k = i; k &lt;= j; k++) {</span><br><span class=\"line\">                    sum += nums[k]</span><br><span class=\"line\">                }</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(sum&gt;res) {</span><br><span class=\"line\">                    res = sum</span><br><span class=\"line\">                }</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<p><strong>通过动态规划求解</strong></p>\n<ul>\n<li><p><strong>状态定义：dp[i]表示以nums[i]结尾的连续子数组的最大和</strong></p>\n</li>\n<li><p><strong>状态转移方程：</strong></p>\n<ul>\n<li><strong>dp[i - 1] &gt; 0, dp[i] = dp[i - 1] + nums[i]</strong></li>\n<li><strong>dp[i - 1] &lt;=0, dp[i] = nums[i]</strong></li>\n</ul>\n</li>\n<li><p><strong>初始化：dp[0] = nums[0]</strong></p>\n</li>\n<li><p><strong>输出：max(dp)</strong></p>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{number[]}</span> <span class=\"variable\">nums</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">{number}</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxSubArray = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">nums</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">let</span> len = nums.length</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dp = []</span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = nums[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; len; i++) {</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dp[i - <span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) {</span><br><span class=\"line\">            dp[i] = dp[i - <span class=\"number\">1</span>] + nums[i]</span><br><span class=\"line\">        } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">            dp[i] = nums[i]</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = -<span class=\"literal\">Infinity</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; len; i++) {</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dp[i] &gt; res) res = dp[i]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\"></span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<h4 id=\"剑指-Offer-47-礼物的最大价值\"><a href=\"#剑指-Offer-47-礼物的最大价值\" class=\"headerlink\" title=\"剑指 Offer 47. 礼物的最大价值\"></a><a href=\"https://leetcode-cn.com/problems/li-wu-de-zui-da-jie-zhi-lcof/\">剑指 Offer 47. 礼物的最大价值</a></h4><p><strong>动态规划：</strong></p>\n<ul>\n<li><strong>状态定义：dp[i][j]表示第i行、第j列拿到最多价值礼物</strong></li>\n<li><strong>状态转移方程：</strong><ul>\n<li><strong>dp[i][j] = max(dp[i-1][j], dp[i][j-1]) + grid[i][j]</strong></li>\n</ul>\n</li>\n<li><strong>初始化：dp[0][0] = grid[0][0]</strong></li>\n</ul>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{number[][]}</span> <span class=\"variable\">grid</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">{number}</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxValue = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">grid</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">let</span> m = grid.length</span><br><span class=\"line\">    <span class=\"keyword\">let</span> n = grid[<span class=\"number\">0</span>].length</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dp = <span class=\"built_in\">Array</span>.from(<span class=\"built_in\">Array</span>(m), <span class=\"function\">() =&gt;</span> <span class=\"built_in\">Array</span>(n))</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; grid.length; i++) {</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; grid[i].length; j++) {</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i - <span class=\"number\">1</span> &lt; <span class=\"number\">0</span> &amp;&amp; j - <span class=\"number\">1</span> &lt; <span class=\"number\">0</span>) {</span><br><span class=\"line\">                dp[i][j] = grid[i][j]</span><br><span class=\"line\">                <span class=\"comment\">// console.log(dp[i][j], i, j)</span></span><br><span class=\"line\">                res = <span class=\"built_in\">Math</span>.max(dp[i][j], res)</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            }</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i - <span class=\"number\">1</span> &lt; <span class=\"number\">0</span>) {                </span><br><span class=\"line\">                dp[i][j] = dp[i][j - <span class=\"number\">1</span>] + grid[i][j]</span><br><span class=\"line\">                <span class=\"comment\">// console.log(dp[i][j], i, j)</span></span><br><span class=\"line\">                res = <span class=\"built_in\">Math</span>.max(dp[i][j], res)</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            }</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (j - <span class=\"number\">1</span> &lt; <span class=\"number\">0</span>) {</span><br><span class=\"line\">                dp[i][j] = dp[i - <span class=\"number\">1</span>][j] + grid[i][j]</span><br><span class=\"line\">                <span class=\"comment\">// console.log(dp[i][j], i, j)</span></span><br><span class=\"line\">                res = <span class=\"built_in\">Math</span>.max(dp[i][j], res)</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            }           </span><br><span class=\"line\">            dp[i][j] = <span class=\"built_in\">Math</span>.max(dp[i - <span class=\"number\">1</span>][j], dp[i][j - <span class=\"number\">1</span>]) + grid[i][j]</span><br><span class=\"line\">            <span class=\"comment\">// console.log(dp[i][j], i, j)</span></span><br><span class=\"line\">            res = <span class=\"built_in\">Math</span>.max(dp[i][j], res)</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<h1 id=\"Leetcode刷题笔记-2021-08-28\"><a href=\"#Leetcode刷题笔记-2021-08-28\" class=\"headerlink\" title=\"Leetcode刷题笔记 2021.08.28\"></a>Leetcode刷题笔记 2021.08.28</h1><h2 id=\"动态规划（中等）\"><a href=\"#动态规划（中等）\" class=\"headerlink\" title=\"动态规划（中等）\"></a>动态规划（中等）</h2><h4 id=\"剑指-Offer-42-连续子数组的最大和\"><a href=\"#剑指-Offer-42-连续子数组的最大和\" class=\"headerlink\" title=\"剑指 Offer 42. 连续子数组的最大和\"></a><a href=\"https://leetcode-cn.com/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof/\">剑指 Offer 42. 连续子数组的最大和</a></h4><p><strong>尝试通过暴力解法，最后TLE</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number[]&#125;</span> <span class=\"variable\">nums</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxSubArray = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">nums</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = -<span class=\"literal\">Infinity</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = i; j &lt; nums.length; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i == j) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (nums[i] &gt; res) &#123;</span><br><span class=\"line\">                    res = nums[i]</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> k = i; k &lt;= j; k++) &#123;</span><br><span class=\"line\">                    sum += nums[k]</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(sum&gt;res) &#123;</span><br><span class=\"line\">                    res = sum</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><strong>通过动态规划求解</strong></p>\n<ul>\n<li><p><strong>状态定义：dp[i]表示以nums[i]结尾的连续子数组的最大和</strong></p>\n</li>\n<li><p><strong>状态转移方程：</strong></p>\n<ul>\n<li><strong>dp[i - 1] &gt; 0, dp[i] = dp[i - 1] + nums[i]</strong></li>\n<li><strong>dp[i - 1] &lt;=0, dp[i] = nums[i]</strong></li>\n</ul>\n</li>\n<li><p><strong>初始化：dp[0] = nums[0]</strong></p>\n</li>\n<li><p><strong>输出：max(dp)</strong></p>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number[]&#125;</span> <span class=\"variable\">nums</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxSubArray = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">nums</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> len = nums.length</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dp = []</span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = nums[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dp[i - <span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            dp[i] = dp[i - <span class=\"number\">1</span>] + nums[i]</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            dp[i] = nums[i]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = -<span class=\"literal\">Infinity</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dp[i] &gt; res) res = dp[i]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"剑指-Offer-47-礼物的最大价值\"><a href=\"#剑指-Offer-47-礼物的最大价值\" class=\"headerlink\" title=\"剑指 Offer 47. 礼物的最大价值\"></a><a href=\"https://leetcode-cn.com/problems/li-wu-de-zui-da-jie-zhi-lcof/\">剑指 Offer 47. 礼物的最大价值</a></h4><p><strong>动态规划：</strong></p>\n<ul>\n<li><strong>状态定义：dp[i][j]表示第i行、第j列拿到最多价值礼物</strong></li>\n<li><strong>状态转移方程：</strong><ul>\n<li><strong>dp[i][j] = max(dp[i-1][j], dp[i][j-1]) + grid[i][j]</strong></li>\n</ul>\n</li>\n<li><strong>初始化：dp[0][0] = grid[0][0]</strong></li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number[][]&#125;</span> <span class=\"variable\">grid</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxValue = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">grid</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> m = grid.length</span><br><span class=\"line\">    <span class=\"keyword\">let</span> n = grid[<span class=\"number\">0</span>].length</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dp = <span class=\"built_in\">Array</span>.from(<span class=\"built_in\">Array</span>(m), <span class=\"function\">() =&gt;</span> <span class=\"built_in\">Array</span>(n))</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; grid.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; grid[i].length; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i - <span class=\"number\">1</span> &lt; <span class=\"number\">0</span> &amp;&amp; j - <span class=\"number\">1</span> &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                dp[i][j] = grid[i][j]</span><br><span class=\"line\">                <span class=\"comment\">// console.log(dp[i][j], i, j)</span></span><br><span class=\"line\">                res = <span class=\"built_in\">Math</span>.max(dp[i][j], res)</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i - <span class=\"number\">1</span> &lt; <span class=\"number\">0</span>) &#123;                </span><br><span class=\"line\">                dp[i][j] = dp[i][j - <span class=\"number\">1</span>] + grid[i][j]</span><br><span class=\"line\">                <span class=\"comment\">// console.log(dp[i][j], i, j)</span></span><br><span class=\"line\">                res = <span class=\"built_in\">Math</span>.max(dp[i][j], res)</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (j - <span class=\"number\">1</span> &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                dp[i][j] = dp[i - <span class=\"number\">1</span>][j] + grid[i][j]</span><br><span class=\"line\">                <span class=\"comment\">// console.log(dp[i][j], i, j)</span></span><br><span class=\"line\">                res = <span class=\"built_in\">Math</span>.max(dp[i][j], res)</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            &#125;           </span><br><span class=\"line\">            dp[i][j] = <span class=\"built_in\">Math</span>.max(dp[i - <span class=\"number\">1</span>][j], dp[i][j - <span class=\"number\">1</span>]) + grid[i][j]</span><br><span class=\"line\">            <span class=\"comment\">// console.log(dp[i][j], i, j)</span></span><br><span class=\"line\">            res = <span class=\"built_in\">Math</span>.max(dp[i][j], res)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Leetcode刷题笔记 2021.08.29","_content":"\n# Leetcode刷题笔记 2021.08.29\n\n## 动态规划\n\n#### [剑指 Offer 46. 把数字翻译成字符串](https://leetcode-cn.com/problems/ba-shu-zi-fan-yi-cheng-zi-fu-chuan-lcof/)\n\n**动态规划：**\n\n- **状态定义：dp[i]表示到第i个字符有几种不同的翻译**\n- **状态转移方程：**\n  - **0 <= Number(num[j] + num[i]) <= 25: dp[i] = dp[i-1] + dp[i-2]**\n  - **Number(num[j] + num[i]) > 25 dp[i] = dp[i-1]**\n- **初始化：dp[0] = 1**\n\n***PS: js中大于小于符号的连用问题。例如（1001<4001<1010）***\n\n***在js的逻辑中，程序会按运算符优先级，先计算左边的，左边的返回应该是bool值，拿这个bool值再结合右边的计算***\n\n- ***1001<=4001 返回true（即1）***\n- ***1 < 1010 返回true***\n\n```js\n/**\n * @param {number} num\n * @return {number}\n */\nvar translateNum = function (num) {\n    let dp = []\n    num = num.toString()\n    dp[0] = 1\n    // console.log(dp[0])\n    for (let i = 1; i < num.length; i++) {\n        if (Number(num[i - 1] + num[i]) >= 10 && Number(num[i - 1] + num[i]) <= 25) {\n            // console.log(Number(num[i - 1] + num[i]) <= 25)\n            if (i - 2 >= 0) {\n                dp[i] = dp[i - 1] + dp[i - 2]\n            } else {\n                dp[i] = 2\n            }\n        } else {\n            dp[i] = dp[i - 1]\n        }\n    }\n    return dp[num.length - 1]\n};\n```\n\n#### [剑指 Offer 48. 最长不含重复字符的子字符串](https://leetcode-cn.com/problems/zui-chang-bu-han-zhong-fu-zi-fu-de-zi-zi-fu-chuan-lcof/)\n\n动态规划：\n\n- 状态定义：dp[i]表示到第i个字符的字串的无重复字符字串的最大长度\n- 状态转移方程：设s为s[j]左侧最近的相同字符\n  - i<0：dp[i-1] + 1\n  - dp[i-1]<i-s：dp[i-1] + 1\n  - dp[i-1]>=i-s：dp[i] = i - s\n- 初始化：dp[0] = 1\n\n```js\n/**\n * @param {string} s\n * @return {number}\n */\nvar lengthOfLongestSubstring = function (s) {\n    if (s == '') return 0\n    let dp = []\n    dp[0] = 1\n    let res = 1\n    for (let i = 1; i < s.length; i++) {\n        let b = i - 1\n        while (b >= 0) {\n            if (s[b] == s[i]) {\n                break\n            }\n            b--\n        }\n        if (b < 0 || i - b > dp[i - 1]) {\n            dp[i] = dp[i - 1] + 1\n            if (res < dp[i]) {\n                res = dp[i]\n            }\n            continue\n        }\n        if (i - b <= dp[i - 1]) {\n            dp[i] = i - b\n            if (res < dp[i]) {\n                res = dp[i]\n            }\n        }\n    }\n    return res\n};\n```\n\n","source":"_posts/Leetcode刷题笔记 2021.08.29.md","raw":"---\n\ntitle: Leetcode刷题笔记 2021.08.29\n\ntag: ['leetcode', '动态规划']\n\ncategories: \n\n- leetcode\n\n- dp\n\n---\n\n# Leetcode刷题笔记 2021.08.29\n\n## 动态规划\n\n#### [剑指 Offer 46. 把数字翻译成字符串](https://leetcode-cn.com/problems/ba-shu-zi-fan-yi-cheng-zi-fu-chuan-lcof/)\n\n**动态规划：**\n\n- **状态定义：dp[i]表示到第i个字符有几种不同的翻译**\n- **状态转移方程：**\n  - **0 <= Number(num[j] + num[i]) <= 25: dp[i] = dp[i-1] + dp[i-2]**\n  - **Number(num[j] + num[i]) > 25 dp[i] = dp[i-1]**\n- **初始化：dp[0] = 1**\n\n***PS: js中大于小于符号的连用问题。例如（1001<4001<1010）***\n\n***在js的逻辑中，程序会按运算符优先级，先计算左边的，左边的返回应该是bool值，拿这个bool值再结合右边的计算***\n\n- ***1001<=4001 返回true（即1）***\n- ***1 < 1010 返回true***\n\n```js\n/**\n * @param {number} num\n * @return {number}\n */\nvar translateNum = function (num) {\n    let dp = []\n    num = num.toString()\n    dp[0] = 1\n    // console.log(dp[0])\n    for (let i = 1; i < num.length; i++) {\n        if (Number(num[i - 1] + num[i]) >= 10 && Number(num[i - 1] + num[i]) <= 25) {\n            // console.log(Number(num[i - 1] + num[i]) <= 25)\n            if (i - 2 >= 0) {\n                dp[i] = dp[i - 1] + dp[i - 2]\n            } else {\n                dp[i] = 2\n            }\n        } else {\n            dp[i] = dp[i - 1]\n        }\n    }\n    return dp[num.length - 1]\n};\n```\n\n#### [剑指 Offer 48. 最长不含重复字符的子字符串](https://leetcode-cn.com/problems/zui-chang-bu-han-zhong-fu-zi-fu-de-zi-zi-fu-chuan-lcof/)\n\n动态规划：\n\n- 状态定义：dp[i]表示到第i个字符的字串的无重复字符字串的最大长度\n- 状态转移方程：设s为s[j]左侧最近的相同字符\n  - i<0：dp[i-1] + 1\n  - dp[i-1]<i-s：dp[i-1] + 1\n  - dp[i-1]>=i-s：dp[i] = i - s\n- 初始化：dp[0] = 1\n\n```js\n/**\n * @param {string} s\n * @return {number}\n */\nvar lengthOfLongestSubstring = function (s) {\n    if (s == '') return 0\n    let dp = []\n    dp[0] = 1\n    let res = 1\n    for (let i = 1; i < s.length; i++) {\n        let b = i - 1\n        while (b >= 0) {\n            if (s[b] == s[i]) {\n                break\n            }\n            b--\n        }\n        if (b < 0 || i - b > dp[i - 1]) {\n            dp[i] = dp[i - 1] + 1\n            if (res < dp[i]) {\n                res = dp[i]\n            }\n            continue\n        }\n        if (i - b <= dp[i - 1]) {\n            dp[i] = i - b\n            if (res < dp[i]) {\n                res = dp[i]\n            }\n        }\n    }\n    return res\n};\n```\n\n","slug":"Leetcode刷题笔记 2021.08.29","published":1,"date":"2021-08-29T07:16:18.085Z","updated":"2021-08-29T07:16:59.947Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cktehwkpc000b1svf94ec1a4z","content":"<h1 id=\"Leetcode刷题笔记-2021-08-29\"><a href=\"#Leetcode刷题笔记-2021-08-29\" class=\"headerlink\" title=\"Leetcode刷题笔记 2021.08.29\"></a>Leetcode刷题笔记 2021.08.29</h1><h2 id=\"动态规划\"><a href=\"#动态规划\" class=\"headerlink\" title=\"动态规划\"></a>动态规划</h2><h4 id=\"剑指-Offer-46-把数字翻译成字符串\"><a href=\"#剑指-Offer-46-把数字翻译成字符串\" class=\"headerlink\" title=\"剑指 Offer 46. 把数字翻译成字符串\"></a><a href=\"https://leetcode-cn.com/problems/ba-shu-zi-fan-yi-cheng-zi-fu-chuan-lcof/\">剑指 Offer 46. 把数字翻译成字符串</a></h4><p><strong>动态规划：</strong></p>\n<ul>\n<li><strong>状态定义：dp[i]表示到第i个字符有几种不同的翻译</strong></li>\n<li><strong>状态转移方程：</strong><ul>\n<li><strong>0 &lt;= Number(num[j] + num[i]) &lt;= 25: dp[i] = dp[i-1] + dp[i-2]</strong></li>\n<li><strong>Number(num[j] + num[i]) &gt; 25 dp[i] = dp[i-1]</strong></li>\n</ul>\n</li>\n<li><strong>初始化：dp[0] = 1</strong></li>\n</ul>\n<p><em><strong>PS: js中大于小于符号的连用问题。例如（1001&lt;4001&lt;1010）</strong></em></p>\n<p><em><strong>在js的逻辑中，程序会按运算符优先级，先计算左边的，左边的返回应该是bool值，拿这个bool值再结合右边的计算</strong></em></p>\n<ul>\n<li><em><strong>1001&lt;=4001 返回true（即1）</strong></em></li>\n<li><em><strong>1 &lt; 1010 返回true</strong></em></li>\n</ul>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{number}</span> <span class=\"variable\">num</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">{number}</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> translateNum = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">num</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dp = []</span><br><span class=\"line\">    num = num.toString()</span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"comment\">// console.log(dp[0])</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; num.length; i++) {</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">Number</span>(num[i - <span class=\"number\">1</span>] + num[i]) &gt;= <span class=\"number\">10</span> &amp;&amp; <span class=\"built_in\">Number</span>(num[i - <span class=\"number\">1</span>] + num[i]) &lt;= <span class=\"number\">25</span>) {</span><br><span class=\"line\">            <span class=\"comment\">// console.log(Number(num[i - 1] + num[i]) &lt;= 25)</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i - <span class=\"number\">2</span> &gt;= <span class=\"number\">0</span>) {</span><br><span class=\"line\">                dp[i] = dp[i - <span class=\"number\">1</span>] + dp[i - <span class=\"number\">2</span>]</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                dp[i] = <span class=\"number\">2</span></span><br><span class=\"line\">            }</span><br><span class=\"line\">        } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">            dp[i] = dp[i - <span class=\"number\">1</span>]</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[num.length - <span class=\"number\">1</span>]</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<h4 id=\"剑指-Offer-48-最长不含重复字符的子字符串\"><a href=\"#剑指-Offer-48-最长不含重复字符的子字符串\" class=\"headerlink\" title=\"剑指 Offer 48. 最长不含重复字符的子字符串\"></a><a href=\"https://leetcode-cn.com/problems/zui-chang-bu-han-zhong-fu-zi-fu-de-zi-zi-fu-chuan-lcof/\">剑指 Offer 48. 最长不含重复字符的子字符串</a></h4><p>动态规划：</p>\n<ul>\n<li>状态定义：dp[i]表示到第i个字符的字串的无重复字符字串的最大长度</li>\n<li>状态转移方程：设s为s[j]左侧最近的相同字符<ul>\n<li>i&lt;0：dp[i-1] + 1</li>\n<li>dp[i-1]&lt;i-s：dp[i-1] + 1</li>\n<li>dp[i-1]&gt;=i-s：dp[i] = i - s</li>\n</ul>\n</li>\n<li>初始化：dp[0] = 1</li>\n</ul>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{string}</span> <span class=\"variable\">s</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">{number}</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> lengthOfLongestSubstring = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">s</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (s == <span class=\"string\">''</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> dp = []</span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; s.length; i++) {</span><br><span class=\"line\">        <span class=\"keyword\">let</span> b = i - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (b &gt;= <span class=\"number\">0</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s[b] == s[i]) {</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">            }</span><br><span class=\"line\">            b--</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (b &lt; <span class=\"number\">0</span> || i - b &gt; dp[i - <span class=\"number\">1</span>]) {</span><br><span class=\"line\">            dp[i] = dp[i - <span class=\"number\">1</span>] + <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (res &lt; dp[i]) {</span><br><span class=\"line\">                res = dp[i]</span><br><span class=\"line\">            }</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i - b &lt;= dp[i - <span class=\"number\">1</span>]) {</span><br><span class=\"line\">            dp[i] = i - b</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (res &lt; dp[i]) {</span><br><span class=\"line\">                res = dp[i]</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<h1 id=\"Leetcode刷题笔记-2021-08-29\"><a href=\"#Leetcode刷题笔记-2021-08-29\" class=\"headerlink\" title=\"Leetcode刷题笔记 2021.08.29\"></a>Leetcode刷题笔记 2021.08.29</h1><h2 id=\"动态规划\"><a href=\"#动态规划\" class=\"headerlink\" title=\"动态规划\"></a>动态规划</h2><h4 id=\"剑指-Offer-46-把数字翻译成字符串\"><a href=\"#剑指-Offer-46-把数字翻译成字符串\" class=\"headerlink\" title=\"剑指 Offer 46. 把数字翻译成字符串\"></a><a href=\"https://leetcode-cn.com/problems/ba-shu-zi-fan-yi-cheng-zi-fu-chuan-lcof/\">剑指 Offer 46. 把数字翻译成字符串</a></h4><p><strong>动态规划：</strong></p>\n<ul>\n<li><strong>状态定义：dp[i]表示到第i个字符有几种不同的翻译</strong></li>\n<li><strong>状态转移方程：</strong><ul>\n<li><strong>0 &lt;= Number(num[j] + num[i]) &lt;= 25: dp[i] = dp[i-1] + dp[i-2]</strong></li>\n<li><strong>Number(num[j] + num[i]) &gt; 25 dp[i] = dp[i-1]</strong></li>\n</ul>\n</li>\n<li><strong>初始化：dp[0] = 1</strong></li>\n</ul>\n<p><em><strong>PS: js中大于小于符号的连用问题。例如（1001&lt;4001&lt;1010）</strong></em></p>\n<p><em><strong>在js的逻辑中，程序会按运算符优先级，先计算左边的，左边的返回应该是bool值，拿这个bool值再结合右边的计算</strong></em></p>\n<ul>\n<li><em><strong>1001&lt;=4001 返回true（即1）</strong></em></li>\n<li><em><strong>1 &lt; 1010 返回true</strong></em></li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number&#125;</span> <span class=\"variable\">num</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> translateNum = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">num</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dp = []</span><br><span class=\"line\">    num = num.toString()</span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"comment\">// console.log(dp[0])</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; num.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">Number</span>(num[i - <span class=\"number\">1</span>] + num[i]) &gt;= <span class=\"number\">10</span> &amp;&amp; <span class=\"built_in\">Number</span>(num[i - <span class=\"number\">1</span>] + num[i]) &lt;= <span class=\"number\">25</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// console.log(Number(num[i - 1] + num[i]) &lt;= 25)</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i - <span class=\"number\">2</span> &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                dp[i] = dp[i - <span class=\"number\">1</span>] + dp[i - <span class=\"number\">2</span>]</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                dp[i] = <span class=\"number\">2</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            dp[i] = dp[i - <span class=\"number\">1</span>]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[num.length - <span class=\"number\">1</span>]</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"剑指-Offer-48-最长不含重复字符的子字符串\"><a href=\"#剑指-Offer-48-最长不含重复字符的子字符串\" class=\"headerlink\" title=\"剑指 Offer 48. 最长不含重复字符的子字符串\"></a><a href=\"https://leetcode-cn.com/problems/zui-chang-bu-han-zhong-fu-zi-fu-de-zi-zi-fu-chuan-lcof/\">剑指 Offer 48. 最长不含重复字符的子字符串</a></h4><p>动态规划：</p>\n<ul>\n<li>状态定义：dp[i]表示到第i个字符的字串的无重复字符字串的最大长度</li>\n<li>状态转移方程：设s为s[j]左侧最近的相同字符<ul>\n<li>i&lt;0：dp[i-1] + 1</li>\n<li>dp[i-1]&lt;i-s：dp[i-1] + 1</li>\n<li>dp[i-1]&gt;=i-s：dp[i] = i - s</li>\n</ul>\n</li>\n<li>初始化：dp[0] = 1</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;string&#125;</span> <span class=\"variable\">s</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> lengthOfLongestSubstring = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (s == <span class=\"string\">&#x27;&#x27;</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> dp = []</span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; s.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> b = i - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (b &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s[b] == s[i]) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            b--</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (b &lt; <span class=\"number\">0</span> || i - b &gt; dp[i - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">            dp[i] = dp[i - <span class=\"number\">1</span>] + <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (res &lt; dp[i]) &#123;</span><br><span class=\"line\">                res = dp[i]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i - b &lt;= dp[i - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">            dp[i] = i - b</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (res &lt; dp[i]) &#123;</span><br><span class=\"line\">                res = dp[i]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Leetcode刷题笔记 2021.08.31","_content":"# Leetcode刷题笔记 2021.08.31\n\n## 双指针\n\n**遍历，指向两个节点，将最小**\n\n```js\n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar mergeTwoLists = function (l1, l2) {\n    let cur1 = l1\n    let cur2 = l2\n    let cur3 = new ListNode()\n    let head = cur3\n    while (cur2 !== null && cur1 !== null) {\n        if (cur1.val >= cur2.val) {\n            cur3.next = cur2\n            cur3 = cur3.next\n            cur2 = cur2.next\n        } else {\n            cur3.next = cur1\n            cur3 = cur3.next\n            cur1 = cur1.next\n        }\n    }\n    if(cur1) {\n        cur3.next = cur1\n    }\n    if(cur2) {\n        cur3.next = cur2\n    }\n    // console.log(head)\n    return head.next\n};\n```\n\n#### [剑指 Offer 52. 两个链表的第一个公共节点](https://leetcode-cn.com/problems/liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof/)\n\n**双指针**\n\n```js\n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n\n/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */\nvar getIntersectionNode = function (headA, headB) {\n    let p1 = headA\n    let p2 = headB\n    while (p1 !== p2) {\n        p1 = p1 == null ? headB : p1.next\n        p2 = p2 == null ? headA : p2.next\n    }\n    return p1\n};\n```\n\n","source":"_posts/Leetcode刷题笔记 2021.08.31.md","raw":"---\n\ntitle: Leetcode刷题笔记 2021.08.31\n\ntag: ['leetcode', '双指针']\n\ncategories: \n\n- leetcode\n\n- 双指针\n\n---\n# Leetcode刷题笔记 2021.08.31\n\n## 双指针\n\n**遍历，指向两个节点，将最小**\n\n```js\n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar mergeTwoLists = function (l1, l2) {\n    let cur1 = l1\n    let cur2 = l2\n    let cur3 = new ListNode()\n    let head = cur3\n    while (cur2 !== null && cur1 !== null) {\n        if (cur1.val >= cur2.val) {\n            cur3.next = cur2\n            cur3 = cur3.next\n            cur2 = cur2.next\n        } else {\n            cur3.next = cur1\n            cur3 = cur3.next\n            cur1 = cur1.next\n        }\n    }\n    if(cur1) {\n        cur3.next = cur1\n    }\n    if(cur2) {\n        cur3.next = cur2\n    }\n    // console.log(head)\n    return head.next\n};\n```\n\n#### [剑指 Offer 52. 两个链表的第一个公共节点](https://leetcode-cn.com/problems/liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof/)\n\n**双指针**\n\n```js\n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n\n/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */\nvar getIntersectionNode = function (headA, headB) {\n    let p1 = headA\n    let p2 = headB\n    while (p1 !== p2) {\n        p1 = p1 == null ? headB : p1.next\n        p2 = p2 == null ? headA : p2.next\n    }\n    return p1\n};\n```\n\n","slug":"Leetcode刷题笔记 2021.08.31","published":1,"date":"2021-08-31T12:11:32.100Z","updated":"2021-08-31T12:12:23.220Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cktehwkpd000f1svf8i9ug2ps","content":"<h1 id=\"Leetcode刷题笔记-2021-08-31\"><a href=\"#Leetcode刷题笔记-2021-08-31\" class=\"headerlink\" title=\"Leetcode刷题笔记 2021.08.31\"></a>Leetcode刷题笔记 2021.08.31</h1><h2 id=\"双指针\"><a href=\"#双指针\" class=\"headerlink\" title=\"双指针\"></a>双指针</h2><p><strong>遍历，指向两个节点，将最小</strong></p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * function ListNode(val) {</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.next = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * }</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{ListNode}</span> <span class=\"variable\">l1</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{ListNode}</span> <span class=\"variable\">l2</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">{ListNode}</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mergeTwoLists = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">l1, l2</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">let</span> cur1 = l1</span><br><span class=\"line\">    <span class=\"keyword\">let</span> cur2 = l2</span><br><span class=\"line\">    <span class=\"keyword\">let</span> cur3 = <span class=\"keyword\">new</span> ListNode()</span><br><span class=\"line\">    <span class=\"keyword\">let</span> head = cur3</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (cur2 !== <span class=\"literal\">null</span> &amp;&amp; cur1 !== <span class=\"literal\">null</span>) {</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (cur1.val &gt;= cur2.val) {</span><br><span class=\"line\">            cur3.next = cur2</span><br><span class=\"line\">            cur3 = cur3.next</span><br><span class=\"line\">            cur2 = cur2.next</span><br><span class=\"line\">        } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">            cur3.next = cur1</span><br><span class=\"line\">            cur3 = cur3.next</span><br><span class=\"line\">            cur1 = cur1.next</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(cur1) {</span><br><span class=\"line\">        cur3.next = cur1</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(cur2) {</span><br><span class=\"line\">        cur3.next = cur2</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\">// console.log(head)</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> head.next</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<h4 id=\"剑指-Offer-52-两个链表的第一个公共节点\"><a href=\"#剑指-Offer-52-两个链表的第一个公共节点\" class=\"headerlink\" title=\"剑指 Offer 52. 两个链表的第一个公共节点\"></a><a href=\"https://leetcode-cn.com/problems/liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof/\">剑指 Offer 52. 两个链表的第一个公共节点</a></h4><p><strong>双指针</strong></p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * function ListNode(val) {</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.next = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * }</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{ListNode}</span> <span class=\"variable\">headA</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{ListNode}</span> <span class=\"variable\">headB</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">{ListNode}</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> getIntersectionNode = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">headA, headB</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">let</span> p1 = headA</span><br><span class=\"line\">    <span class=\"keyword\">let</span> p2 = headB</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p1 !== p2) {</span><br><span class=\"line\">        p1 = p1 == <span class=\"literal\">null</span> ? headB : p1.next</span><br><span class=\"line\">        p2 = p2 == <span class=\"literal\">null</span> ? headA : p2.next</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p1</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<h1 id=\"Leetcode刷题笔记-2021-08-31\"><a href=\"#Leetcode刷题笔记-2021-08-31\" class=\"headerlink\" title=\"Leetcode刷题笔记 2021.08.31\"></a>Leetcode刷题笔记 2021.08.31</h1><h2 id=\"双指针\"><a href=\"#双指针\" class=\"headerlink\" title=\"双指针\"></a>双指针</h2><p><strong>遍历，指向两个节点，将最小</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * function ListNode(val) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.next = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;ListNode&#125;</span> <span class=\"variable\">l1</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;ListNode&#125;</span> <span class=\"variable\">l2</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;ListNode&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mergeTwoLists = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">l1, l2</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> cur1 = l1</span><br><span class=\"line\">    <span class=\"keyword\">let</span> cur2 = l2</span><br><span class=\"line\">    <span class=\"keyword\">let</span> cur3 = <span class=\"keyword\">new</span> ListNode()</span><br><span class=\"line\">    <span class=\"keyword\">let</span> head = cur3</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (cur2 !== <span class=\"literal\">null</span> &amp;&amp; cur1 !== <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (cur1.val &gt;= cur2.val) &#123;</span><br><span class=\"line\">            cur3.next = cur2</span><br><span class=\"line\">            cur3 = cur3.next</span><br><span class=\"line\">            cur2 = cur2.next</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            cur3.next = cur1</span><br><span class=\"line\">            cur3 = cur3.next</span><br><span class=\"line\">            cur1 = cur1.next</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(cur1) &#123;</span><br><span class=\"line\">        cur3.next = cur1</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(cur2) &#123;</span><br><span class=\"line\">        cur3.next = cur2</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// console.log(head)</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> head.next</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"剑指-Offer-52-两个链表的第一个公共节点\"><a href=\"#剑指-Offer-52-两个链表的第一个公共节点\" class=\"headerlink\" title=\"剑指 Offer 52. 两个链表的第一个公共节点\"></a><a href=\"https://leetcode-cn.com/problems/liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof/\">剑指 Offer 52. 两个链表的第一个公共节点</a></h4><p><strong>双指针</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * function ListNode(val) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.next = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;ListNode&#125;</span> <span class=\"variable\">headA</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;ListNode&#125;</span> <span class=\"variable\">headB</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;ListNode&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> getIntersectionNode = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">headA, headB</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> p1 = headA</span><br><span class=\"line\">    <span class=\"keyword\">let</span> p2 = headB</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p1 !== p2) &#123;</span><br><span class=\"line\">        p1 = p1 == <span class=\"literal\">null</span> ? headB : p1.next</span><br><span class=\"line\">        p2 = p2 == <span class=\"literal\">null</span> ? headA : p2.next</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p1</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Leetcode刷题笔记 2021.08.30","_content":"# Leetcode刷题笔记 2021.08.30\n\n## 双指针（简单）\n\n#### [剑指 Offer 18. 删除链表的节点](https://leetcode-cn.com/problems/shan-chu-lian-biao-de-jie-dian-lcof/)\n\n**暴力法**\n\n```js\n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} head\n * @param {number} val\n * @return {ListNode}\n */\nvar deleteNode = function (head, val) {\n    if (head.val == val) {\n        head = head.next\n        return head\n    }\n    let pre = head\n    let cur = head.next\n    while (cur) {\n        if (cur.val == val) {\n            pre.next = cur.next\n        }\n        pre = cur\n        cur = cur.next\n    }\n    return head\n};\n```\n\n#### [剑指 Offer 22. 链表中倒数第k个节点](https://leetcode-cn.com/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof/)\n\n**快慢指针**\n\n**让fast指针先走k个节点，然后再让fast和slow再同时走**\n\n```js\n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} head\n * @param {number} k\n * @return {ListNode}\n */\nvar getKthFromEnd = function(head, k) {\n    let fast = head\n    let slow = head\n    let count=k\n    while(count) {\n        fast = fast.next\n        count--\n    }\n    while(fast) {\n        slow = slow.next\n        fast = fast.next\n    }\n    // console.log(fast, slow)\n    return slow\n};\n```\n\n\n\n","source":"_posts/Leetcode刷题笔记 2021.08.30.md","raw":"---\n\ntitle: Leetcode刷题笔记 2021.08.30\n\ntag: ['leetcode', '快慢指针']\n\ncategories: \n\n- leetcode\n\n- 快慢指针\n\n---\n# Leetcode刷题笔记 2021.08.30\n\n## 双指针（简单）\n\n#### [剑指 Offer 18. 删除链表的节点](https://leetcode-cn.com/problems/shan-chu-lian-biao-de-jie-dian-lcof/)\n\n**暴力法**\n\n```js\n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} head\n * @param {number} val\n * @return {ListNode}\n */\nvar deleteNode = function (head, val) {\n    if (head.val == val) {\n        head = head.next\n        return head\n    }\n    let pre = head\n    let cur = head.next\n    while (cur) {\n        if (cur.val == val) {\n            pre.next = cur.next\n        }\n        pre = cur\n        cur = cur.next\n    }\n    return head\n};\n```\n\n#### [剑指 Offer 22. 链表中倒数第k个节点](https://leetcode-cn.com/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof/)\n\n**快慢指针**\n\n**让fast指针先走k个节点，然后再让fast和slow再同时走**\n\n```js\n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} head\n * @param {number} k\n * @return {ListNode}\n */\nvar getKthFromEnd = function(head, k) {\n    let fast = head\n    let slow = head\n    let count=k\n    while(count) {\n        fast = fast.next\n        count--\n    }\n    while(fast) {\n        slow = slow.next\n        fast = fast.next\n    }\n    // console.log(fast, slow)\n    return slow\n};\n```\n\n\n\n","slug":"Leetcode刷题笔记 2021.08.30","published":1,"date":"2021-08-30T14:47:05.899Z","updated":"2021-08-30T14:48:30.852Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cktehwkpf000g1svfbi2p7hod","content":"<h1 id=\"Leetcode刷题笔记-2021-08-30\"><a href=\"#Leetcode刷题笔记-2021-08-30\" class=\"headerlink\" title=\"Leetcode刷题笔记 2021.08.30\"></a>Leetcode刷题笔记 2021.08.30</h1><h2 id=\"双指针（简单）\"><a href=\"#双指针（简单）\" class=\"headerlink\" title=\"双指针（简单）\"></a>双指针（简单）</h2><h4 id=\"剑指-Offer-18-删除链表的节点\"><a href=\"#剑指-Offer-18-删除链表的节点\" class=\"headerlink\" title=\"剑指 Offer 18. 删除链表的节点\"></a><a href=\"https://leetcode-cn.com/problems/shan-chu-lian-biao-de-jie-dian-lcof/\">剑指 Offer 18. 删除链表的节点</a></h4><p><strong>暴力法</strong></p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * function ListNode(val) {</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.next = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * }</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{ListNode}</span> <span class=\"variable\">head</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{number}</span> <span class=\"variable\">val</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">{ListNode}</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> deleteNode = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">head, val</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (head.val == val) {</span><br><span class=\"line\">        head = head.next</span><br><span class=\"line\">        <span class=\"keyword\">return</span> head</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">let</span> pre = head</span><br><span class=\"line\">    <span class=\"keyword\">let</span> cur = head.next</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (cur) {</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (cur.val == val) {</span><br><span class=\"line\">            pre.next = cur.next</span><br><span class=\"line\">        }</span><br><span class=\"line\">        pre = cur</span><br><span class=\"line\">        cur = cur.next</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> head</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<h4 id=\"剑指-Offer-22-链表中倒数第k个节点\"><a href=\"#剑指-Offer-22-链表中倒数第k个节点\" class=\"headerlink\" title=\"剑指 Offer 22. 链表中倒数第k个节点\"></a><a href=\"https://leetcode-cn.com/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof/\">剑指 Offer 22. 链表中倒数第k个节点</a></h4><p><strong>快慢指针</strong></p>\n<p><strong>让fast指针先走k个节点，然后再让fast和slow再同时走</strong></p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * function ListNode(val) {</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.next = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * }</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{ListNode}</span> <span class=\"variable\">head</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{number}</span> <span class=\"variable\">k</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">{ListNode}</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> getKthFromEnd = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">head, k</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">let</span> fast = head</span><br><span class=\"line\">    <span class=\"keyword\">let</span> slow = head</span><br><span class=\"line\">    <span class=\"keyword\">let</span> count=k</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(count) {</span><br><span class=\"line\">        fast = fast.next</span><br><span class=\"line\">        count--</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(fast) {</span><br><span class=\"line\">        slow = slow.next</span><br><span class=\"line\">        fast = fast.next</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\">// console.log(fast, slow)</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> slow</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n\n\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<h1 id=\"Leetcode刷题笔记-2021-08-30\"><a href=\"#Leetcode刷题笔记-2021-08-30\" class=\"headerlink\" title=\"Leetcode刷题笔记 2021.08.30\"></a>Leetcode刷题笔记 2021.08.30</h1><h2 id=\"双指针（简单）\"><a href=\"#双指针（简单）\" class=\"headerlink\" title=\"双指针（简单）\"></a>双指针（简单）</h2><h4 id=\"剑指-Offer-18-删除链表的节点\"><a href=\"#剑指-Offer-18-删除链表的节点\" class=\"headerlink\" title=\"剑指 Offer 18. 删除链表的节点\"></a><a href=\"https://leetcode-cn.com/problems/shan-chu-lian-biao-de-jie-dian-lcof/\">剑指 Offer 18. 删除链表的节点</a></h4><p><strong>暴力法</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * function ListNode(val) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.next = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;ListNode&#125;</span> <span class=\"variable\">head</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number&#125;</span> <span class=\"variable\">val</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;ListNode&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> deleteNode = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">head, val</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (head.val == val) &#123;</span><br><span class=\"line\">        head = head.next</span><br><span class=\"line\">        <span class=\"keyword\">return</span> head</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> pre = head</span><br><span class=\"line\">    <span class=\"keyword\">let</span> cur = head.next</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (cur) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (cur.val == val) &#123;</span><br><span class=\"line\">            pre.next = cur.next</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        pre = cur</span><br><span class=\"line\">        cur = cur.next</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> head</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"剑指-Offer-22-链表中倒数第k个节点\"><a href=\"#剑指-Offer-22-链表中倒数第k个节点\" class=\"headerlink\" title=\"剑指 Offer 22. 链表中倒数第k个节点\"></a><a href=\"https://leetcode-cn.com/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof/\">剑指 Offer 22. 链表中倒数第k个节点</a></h4><p><strong>快慢指针</strong></p>\n<p><strong>让fast指针先走k个节点，然后再让fast和slow再同时走</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * function ListNode(val) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.next = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;ListNode&#125;</span> <span class=\"variable\">head</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number&#125;</span> <span class=\"variable\">k</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;ListNode&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> getKthFromEnd = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">head, k</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> fast = head</span><br><span class=\"line\">    <span class=\"keyword\">let</span> slow = head</span><br><span class=\"line\">    <span class=\"keyword\">let</span> count=k</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(count) &#123;</span><br><span class=\"line\">        fast = fast.next</span><br><span class=\"line\">        count--</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(fast) &#123;</span><br><span class=\"line\">        slow = slow.next</span><br><span class=\"line\">        fast = fast.next</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// console.log(fast, slow)</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> slow</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ntag: hello world\ncategories: \n- hello world\n- start\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2021-08-22T07:50:36.212Z","updated":"2021-08-23T07:21:54.137Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cktehwkpj000k1svf7alr3qth","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></tbody></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></tbody></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"Leetcode刷题笔记 2021.09.04","_content":"# Leetcode刷题笔记 2021.09.04\n\n## 双指针\n\n#### [剑指 Offer 21. 调整数组顺序使奇数位于偶数前面](https://leetcode-cn.com/problems/diao-zheng-shu-zu-shun-xu-shi-qi-shu-wei-yu-ou-shu-qian-mian-lcof/)\n\n**PS: JS解构赋值交换两个变量的值**\n\n```js\n/**\n * @param {number[]} nums\n * @return {number[]}\n */\nvar exchange = function(nums) {\n    let left = 0;\n  let right = nums.length - 1;\n  while (left < right) {\n    if (nums[left] & 1) {\n      left++;\n      continue;\n    }\n    [nums[right], nums[left]] = [nums[left], nums[right]];\n    right--;\n  }\n  return nums;\n};\n```\n\n#### [剑指 Offer 57. 和为s的两个数字](https://leetcode-cn.com/problems/he-wei-sde-liang-ge-shu-zi-lcof/)\n\n```js\n/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function (nums, target) {\n    let left = 0\n    let right = nums.length - 1\n    while (left < right) {\n        if (nums[left] + nums[right] > target) {\n            right--\n        } else if (nums[left] + nums[right] < target) {\n            left++\n        } else {\n            return [nums[left], nums[right]]\n        }\n    }\n    return null\n};\n```\n\n#### [剑指 Offer 58 - I. 翻转单词顺序](https://leetcode-cn.com/problems/fan-zhuan-dan-ci-shun-xu-lcof/)\n\n```js\n/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n    let re = s.split(' ').reverse()\n    // console.log(re)\n    let res = []\n    for (let i = 0; i < re.length; i++) {\n        if (re[i] == '') continue\n        res.push(re[i])\n    }\n    return res.join(' ')\n};\n```\n\n## 搜索与回溯算法（中等）\n\n#### [剑指 Offer 12. 矩阵中的路径](https://leetcode-cn.com/problems/ju-zhen-zhong-de-lu-jing-lcof/)\n\n**深度优先搜索（DFS）+ 剪枝**\n\n```js\n/**\n * @param {character[][]} board\n * @param {string} word\n * @return {boolean}\n */\nvar exist = function (board, word) {\n    let rows = board.length\n    let cols = board[0].length || 0\n\n    let dfs = function (i, j, board, word, index) {\n        if (i < 0 || i > rows - 1 || j < 0 || j > cols - 1 || board[i][j] !== word[index]) {\n            return false\n        }\n        if (index == word.length - 1) return true\n        let temp = board[i][j]\n        board[i][j] = '-'\n        let res = dfs(i - 1, j, board, word, index + 1) || dfs(i + 1, j, board, word, index + 1) || dfs(i, j - 1, board, word, index + 1) || dfs(i, j + 1, board, word, index + 1)\n        board[i][j] = temp\n        return res\n\n    }\n\n    for (let i = 0; i < rows; i++) {\n        for (let j = 0; j < cols; j++) {\n            if (dfs(i, j, board, word, 0)) {\n                return true\n            }\n        }\n    }\n    return false\n};\n```\n\n#### [剑指 Offer 13. 机器人的运动范围](https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof/)\n\n**由于涉及到移动所以遍历二维数组找出个数不可行**\n\n**通过深度优先搜索（DFS）进行解题**\n\n```js\n/**\n * @param {number} m\n * @param {number} n\n * @param {number} k\n * @return {number}\n */\nvar movingCount = function (m, n, k) {\n    let checkValidation = function (m, n) {\n        // console.log(m, n)\n        let sum = 0\n        let a = m\n        let b = n\n        while (a) {\n            sum += a % 10\n            a = Math.floor(a / 10)\n        }\n        while (b) {\n            sum += b % 10\n            b = Math.floor(b / 10)\n        }\n        // console.log(sum)\n        return sum <= k\n\n    }\n    let dfs = function (i, j, grid) {\n        if (i < 0 || i > m - 1 || j < 0 || j > n - 1 || !checkValidation(i, j) || grid[i][j] == 0) {\n            return 0\n        }\n        grid[i][j] = 0\n        return 1 + dfs(i + 1, j, grid) + dfs(i, j + 1, grid)\n\n    }\n\n    let grid = Array.from(Array(m), () => Array(n))\n    for (let i = 0; i < m; i++) {\n        for (let j = 0; j < n; j++) {\n            grid[i][j] = 1\n            return dfs(i, j, grid)\n        }\n    }\n};\n```\n\n","source":"_posts/Leetcode刷题笔记 2021.09.04.md","raw":"---\n\ntitle: Leetcode刷题笔记 2021.09.04\n\ntag: ['leetcode', '双指针', '搜索与回溯算法']\n\ncategories: \n\n- leetcode\n- 双指针\n- 搜索与回溯算法\n\n---\n# Leetcode刷题笔记 2021.09.04\n\n## 双指针\n\n#### [剑指 Offer 21. 调整数组顺序使奇数位于偶数前面](https://leetcode-cn.com/problems/diao-zheng-shu-zu-shun-xu-shi-qi-shu-wei-yu-ou-shu-qian-mian-lcof/)\n\n**PS: JS解构赋值交换两个变量的值**\n\n```js\n/**\n * @param {number[]} nums\n * @return {number[]}\n */\nvar exchange = function(nums) {\n    let left = 0;\n  let right = nums.length - 1;\n  while (left < right) {\n    if (nums[left] & 1) {\n      left++;\n      continue;\n    }\n    [nums[right], nums[left]] = [nums[left], nums[right]];\n    right--;\n  }\n  return nums;\n};\n```\n\n#### [剑指 Offer 57. 和为s的两个数字](https://leetcode-cn.com/problems/he-wei-sde-liang-ge-shu-zi-lcof/)\n\n```js\n/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function (nums, target) {\n    let left = 0\n    let right = nums.length - 1\n    while (left < right) {\n        if (nums[left] + nums[right] > target) {\n            right--\n        } else if (nums[left] + nums[right] < target) {\n            left++\n        } else {\n            return [nums[left], nums[right]]\n        }\n    }\n    return null\n};\n```\n\n#### [剑指 Offer 58 - I. 翻转单词顺序](https://leetcode-cn.com/problems/fan-zhuan-dan-ci-shun-xu-lcof/)\n\n```js\n/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n    let re = s.split(' ').reverse()\n    // console.log(re)\n    let res = []\n    for (let i = 0; i < re.length; i++) {\n        if (re[i] == '') continue\n        res.push(re[i])\n    }\n    return res.join(' ')\n};\n```\n\n## 搜索与回溯算法（中等）\n\n#### [剑指 Offer 12. 矩阵中的路径](https://leetcode-cn.com/problems/ju-zhen-zhong-de-lu-jing-lcof/)\n\n**深度优先搜索（DFS）+ 剪枝**\n\n```js\n/**\n * @param {character[][]} board\n * @param {string} word\n * @return {boolean}\n */\nvar exist = function (board, word) {\n    let rows = board.length\n    let cols = board[0].length || 0\n\n    let dfs = function (i, j, board, word, index) {\n        if (i < 0 || i > rows - 1 || j < 0 || j > cols - 1 || board[i][j] !== word[index]) {\n            return false\n        }\n        if (index == word.length - 1) return true\n        let temp = board[i][j]\n        board[i][j] = '-'\n        let res = dfs(i - 1, j, board, word, index + 1) || dfs(i + 1, j, board, word, index + 1) || dfs(i, j - 1, board, word, index + 1) || dfs(i, j + 1, board, word, index + 1)\n        board[i][j] = temp\n        return res\n\n    }\n\n    for (let i = 0; i < rows; i++) {\n        for (let j = 0; j < cols; j++) {\n            if (dfs(i, j, board, word, 0)) {\n                return true\n            }\n        }\n    }\n    return false\n};\n```\n\n#### [剑指 Offer 13. 机器人的运动范围](https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof/)\n\n**由于涉及到移动所以遍历二维数组找出个数不可行**\n\n**通过深度优先搜索（DFS）进行解题**\n\n```js\n/**\n * @param {number} m\n * @param {number} n\n * @param {number} k\n * @return {number}\n */\nvar movingCount = function (m, n, k) {\n    let checkValidation = function (m, n) {\n        // console.log(m, n)\n        let sum = 0\n        let a = m\n        let b = n\n        while (a) {\n            sum += a % 10\n            a = Math.floor(a / 10)\n        }\n        while (b) {\n            sum += b % 10\n            b = Math.floor(b / 10)\n        }\n        // console.log(sum)\n        return sum <= k\n\n    }\n    let dfs = function (i, j, grid) {\n        if (i < 0 || i > m - 1 || j < 0 || j > n - 1 || !checkValidation(i, j) || grid[i][j] == 0) {\n            return 0\n        }\n        grid[i][j] = 0\n        return 1 + dfs(i + 1, j, grid) + dfs(i, j + 1, grid)\n\n    }\n\n    let grid = Array.from(Array(m), () => Array(n))\n    for (let i = 0; i < m; i++) {\n        for (let j = 0; j < n; j++) {\n            grid[i][j] = 1\n            return dfs(i, j, grid)\n        }\n    }\n};\n```\n\n","slug":"Leetcode刷题笔记 2021.09.04","published":1,"date":"2021-09-04T15:33:51.923Z","updated":"2021-09-04T15:38:26.806Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cktehwkq3001y1svf1v79ab1y","content":"<h1 id=\"Leetcode刷题笔记-2021-09-04\"><a href=\"#Leetcode刷题笔记-2021-09-04\" class=\"headerlink\" title=\"Leetcode刷题笔记 2021.09.04\"></a>Leetcode刷题笔记 2021.09.04</h1><h2 id=\"双指针\"><a href=\"#双指针\" class=\"headerlink\" title=\"双指针\"></a>双指针</h2><h4 id=\"剑指-Offer-21-调整数组顺序使奇数位于偶数前面\"><a href=\"#剑指-Offer-21-调整数组顺序使奇数位于偶数前面\" class=\"headerlink\" title=\"剑指 Offer 21. 调整数组顺序使奇数位于偶数前面\"></a><a href=\"https://leetcode-cn.com/problems/diao-zheng-shu-zu-shun-xu-shi-qi-shu-wei-yu-ou-shu-qian-mian-lcof/\">剑指 Offer 21. 调整数组顺序使奇数位于偶数前面</a></h4><p><strong>PS: JS解构赋值交换两个变量的值</strong></p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{number[]}</span> <span class=\"variable\">nums</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">{number[]}</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> exchange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">let</span> left = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> right = nums.length - <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (left &lt; right) {</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums[left] &amp; <span class=\"number\">1</span>) {</span><br><span class=\"line\">      left++;</span><br><span class=\"line\">      <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    [nums[right], nums[left]] = [nums[left], nums[right]];</span><br><span class=\"line\">    right--;</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">return</span> nums;</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<h4 id=\"剑指-Offer-57-和为s的两个数字\"><a href=\"#剑指-Offer-57-和为s的两个数字\" class=\"headerlink\" title=\"剑指 Offer 57. 和为s的两个数字\"></a><a href=\"https://leetcode-cn.com/problems/he-wei-sde-liang-ge-shu-zi-lcof/\">剑指 Offer 57. 和为s的两个数字</a></h4><figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{number[]}</span> <span class=\"variable\">nums</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{number}</span> <span class=\"variable\">target</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">{number[]}</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> twoSum = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">nums, target</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">let</span> left = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> right = nums.length - <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (left &lt; right) {</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[left] + nums[right] &gt; target) {</span><br><span class=\"line\">            right--</span><br><span class=\"line\">        } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (nums[left] + nums[right] &lt; target) {</span><br><span class=\"line\">            left++</span><br><span class=\"line\">        } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> [nums[left], nums[right]]</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">null</span></span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<h4 id=\"剑指-Offer-58-I-翻转单词顺序\"><a href=\"#剑指-Offer-58-I-翻转单词顺序\" class=\"headerlink\" title=\"剑指 Offer 58 - I. 翻转单词顺序\"></a><a href=\"https://leetcode-cn.com/problems/fan-zhuan-dan-ci-shun-xu-lcof/\">剑指 Offer 58 - I. 翻转单词顺序</a></h4><figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{string}</span> <span class=\"variable\">s</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">{string}</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reverseWords = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">s</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">let</span> re = s.split(<span class=\"string\">' '</span>).reverse()</span><br><span class=\"line\">    <span class=\"comment\">// console.log(re)</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; re.length; i++) {</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (re[i] == <span class=\"string\">''</span>) <span class=\"keyword\">continue</span></span><br><span class=\"line\">        res.push(re[i])</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res.join(<span class=\"string\">' '</span>)</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<h2 id=\"搜索与回溯算法（中等）\"><a href=\"#搜索与回溯算法（中等）\" class=\"headerlink\" title=\"搜索与回溯算法（中等）\"></a>搜索与回溯算法（中等）</h2><h4 id=\"剑指-Offer-12-矩阵中的路径\"><a href=\"#剑指-Offer-12-矩阵中的路径\" class=\"headerlink\" title=\"剑指 Offer 12. 矩阵中的路径\"></a><a href=\"https://leetcode-cn.com/problems/ju-zhen-zhong-de-lu-jing-lcof/\">剑指 Offer 12. 矩阵中的路径</a></h4><p><strong>深度优先搜索（DFS）+ 剪枝</strong></p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{character[][]}</span> <span class=\"variable\">board</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{string}</span> <span class=\"variable\">word</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">{boolean}</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> exist = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">board, word</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">let</span> rows = board.length</span><br><span class=\"line\">    <span class=\"keyword\">let</span> cols = board[<span class=\"number\">0</span>].length || <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> dfs = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">i, j, board, word, index</span>) </span>{</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; <span class=\"number\">0</span> || i &gt; rows - <span class=\"number\">1</span> || j &lt; <span class=\"number\">0</span> || j &gt; cols - <span class=\"number\">1</span> || board[i][j] !== word[index]) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (index == word.length - <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> temp = board[i][j]</span><br><span class=\"line\">        board[i][j] = <span class=\"string\">'-'</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> res = dfs(i - <span class=\"number\">1</span>, j, board, word, index + <span class=\"number\">1</span>) || dfs(i + <span class=\"number\">1</span>, j, board, word, index + <span class=\"number\">1</span>) || dfs(i, j - <span class=\"number\">1</span>, board, word, index + <span class=\"number\">1</span>) || dfs(i, j + <span class=\"number\">1</span>, board, word, index + <span class=\"number\">1</span>)</span><br><span class=\"line\">        board[i][j] = temp</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res</span><br><span class=\"line\"></span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; rows; i++) {</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; cols; j++) {</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (dfs(i, j, board, word, <span class=\"number\">0</span>)) {</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<h4 id=\"剑指-Offer-13-机器人的运动范围\"><a href=\"#剑指-Offer-13-机器人的运动范围\" class=\"headerlink\" title=\"剑指 Offer 13. 机器人的运动范围\"></a><a href=\"https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof/\">剑指 Offer 13. 机器人的运动范围</a></h4><p><strong>由于涉及到移动所以遍历二维数组找出个数不可行</strong></p>\n<p><strong>通过深度优先搜索（DFS）进行解题</strong></p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{number}</span> <span class=\"variable\">m</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{number}</span> <span class=\"variable\">n</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">{number}</span> <span class=\"variable\">k</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">{number}</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> movingCount = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">m, n, k</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">let</span> checkValidation = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">m, n</span>) </span>{</span><br><span class=\"line\">        <span class=\"comment\">// console.log(m, n)</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> a = m</span><br><span class=\"line\">        <span class=\"keyword\">let</span> b = n</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (a) {</span><br><span class=\"line\">            sum += a % <span class=\"number\">10</span></span><br><span class=\"line\">            a = <span class=\"built_in\">Math</span>.floor(a / <span class=\"number\">10</span>)</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (b) {</span><br><span class=\"line\">            sum += b % <span class=\"number\">10</span></span><br><span class=\"line\">            b = <span class=\"built_in\">Math</span>.floor(b / <span class=\"number\">10</span>)</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"comment\">// console.log(sum)</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum &lt;= k</span><br><span class=\"line\"></span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dfs = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">i, j, grid</span>) </span>{</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; <span class=\"number\">0</span> || i &gt; m - <span class=\"number\">1</span> || j &lt; <span class=\"number\">0</span> || j &gt; n - <span class=\"number\">1</span> || !checkValidation(i, j) || grid[i][j] == <span class=\"number\">0</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">        }</span><br><span class=\"line\">        grid[i][j] = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span> + dfs(i + <span class=\"number\">1</span>, j, grid) + dfs(i, j + <span class=\"number\">1</span>, grid)</span><br><span class=\"line\"></span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> grid = <span class=\"built_in\">Array</span>.from(<span class=\"built_in\">Array</span>(m), <span class=\"function\">() =&gt;</span> <span class=\"built_in\">Array</span>(n))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; m; i++) {</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; n; j++) {</span><br><span class=\"line\">            grid[i][j] = <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> dfs(i, j, grid)</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<h1 id=\"Leetcode刷题笔记-2021-09-04\"><a href=\"#Leetcode刷题笔记-2021-09-04\" class=\"headerlink\" title=\"Leetcode刷题笔记 2021.09.04\"></a>Leetcode刷题笔记 2021.09.04</h1><h2 id=\"双指针\"><a href=\"#双指针\" class=\"headerlink\" title=\"双指针\"></a>双指针</h2><h4 id=\"剑指-Offer-21-调整数组顺序使奇数位于偶数前面\"><a href=\"#剑指-Offer-21-调整数组顺序使奇数位于偶数前面\" class=\"headerlink\" title=\"剑指 Offer 21. 调整数组顺序使奇数位于偶数前面\"></a><a href=\"https://leetcode-cn.com/problems/diao-zheng-shu-zu-shun-xu-shi-qi-shu-wei-yu-ou-shu-qian-mian-lcof/\">剑指 Offer 21. 调整数组顺序使奇数位于偶数前面</a></h4><p><strong>PS: JS解构赋值交换两个变量的值</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number[]&#125;</span> <span class=\"variable\">nums</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number[]&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> exchange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> left = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> right = nums.length - <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (left &lt; right) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums[left] &amp; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      left++;</span><br><span class=\"line\">      <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    [nums[right], nums[left]] = [nums[left], nums[right]];</span><br><span class=\"line\">    right--;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> nums;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"剑指-Offer-57-和为s的两个数字\"><a href=\"#剑指-Offer-57-和为s的两个数字\" class=\"headerlink\" title=\"剑指 Offer 57. 和为s的两个数字\"></a><a href=\"https://leetcode-cn.com/problems/he-wei-sde-liang-ge-shu-zi-lcof/\">剑指 Offer 57. 和为s的两个数字</a></h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number[]&#125;</span> <span class=\"variable\">nums</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number&#125;</span> <span class=\"variable\">target</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number[]&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> twoSum = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">nums, target</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> left = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> right = nums.length - <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (left &lt; right) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[left] + nums[right] &gt; target) &#123;</span><br><span class=\"line\">            right--</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (nums[left] + nums[right] &lt; target) &#123;</span><br><span class=\"line\">            left++</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> [nums[left], nums[right]]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">null</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"剑指-Offer-58-I-翻转单词顺序\"><a href=\"#剑指-Offer-58-I-翻转单词顺序\" class=\"headerlink\" title=\"剑指 Offer 58 - I. 翻转单词顺序\"></a><a href=\"https://leetcode-cn.com/problems/fan-zhuan-dan-ci-shun-xu-lcof/\">剑指 Offer 58 - I. 翻转单词顺序</a></h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;string&#125;</span> <span class=\"variable\">s</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;string&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reverseWords = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> re = s.split(<span class=\"string\">&#x27; &#x27;</span>).reverse()</span><br><span class=\"line\">    <span class=\"comment\">// console.log(re)</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; re.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (re[i] == <span class=\"string\">&#x27;&#x27;</span>) <span class=\"keyword\">continue</span></span><br><span class=\"line\">        res.push(re[i])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res.join(<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"搜索与回溯算法（中等）\"><a href=\"#搜索与回溯算法（中等）\" class=\"headerlink\" title=\"搜索与回溯算法（中等）\"></a>搜索与回溯算法（中等）</h2><h4 id=\"剑指-Offer-12-矩阵中的路径\"><a href=\"#剑指-Offer-12-矩阵中的路径\" class=\"headerlink\" title=\"剑指 Offer 12. 矩阵中的路径\"></a><a href=\"https://leetcode-cn.com/problems/ju-zhen-zhong-de-lu-jing-lcof/\">剑指 Offer 12. 矩阵中的路径</a></h4><p><strong>深度优先搜索（DFS）+ 剪枝</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;character[][]&#125;</span> <span class=\"variable\">board</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;string&#125;</span> <span class=\"variable\">word</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;boolean&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> exist = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">board, word</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> rows = board.length</span><br><span class=\"line\">    <span class=\"keyword\">let</span> cols = board[<span class=\"number\">0</span>].length || <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> dfs = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">i, j, board, word, index</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; <span class=\"number\">0</span> || i &gt; rows - <span class=\"number\">1</span> || j &lt; <span class=\"number\">0</span> || j &gt; cols - <span class=\"number\">1</span> || board[i][j] !== word[index]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (index == word.length - <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> temp = board[i][j]</span><br><span class=\"line\">        board[i][j] = <span class=\"string\">&#x27;-&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> res = dfs(i - <span class=\"number\">1</span>, j, board, word, index + <span class=\"number\">1</span>) || dfs(i + <span class=\"number\">1</span>, j, board, word, index + <span class=\"number\">1</span>) || dfs(i, j - <span class=\"number\">1</span>, board, word, index + <span class=\"number\">1</span>) || dfs(i, j + <span class=\"number\">1</span>, board, word, index + <span class=\"number\">1</span>)</span><br><span class=\"line\">        board[i][j] = temp</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; rows; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; cols; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (dfs(i, j, board, word, <span class=\"number\">0</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"剑指-Offer-13-机器人的运动范围\"><a href=\"#剑指-Offer-13-机器人的运动范围\" class=\"headerlink\" title=\"剑指 Offer 13. 机器人的运动范围\"></a><a href=\"https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof/\">剑指 Offer 13. 机器人的运动范围</a></h4><p><strong>由于涉及到移动所以遍历二维数组找出个数不可行</strong></p>\n<p><strong>通过深度优先搜索（DFS）进行解题</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number&#125;</span> <span class=\"variable\">m</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number&#125;</span> <span class=\"variable\">n</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number&#125;</span> <span class=\"variable\">k</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> movingCount = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">m, n, k</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> checkValidation = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">m, n</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// console.log(m, n)</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> a = m</span><br><span class=\"line\">        <span class=\"keyword\">let</span> b = n</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (a) &#123;</span><br><span class=\"line\">            sum += a % <span class=\"number\">10</span></span><br><span class=\"line\">            a = <span class=\"built_in\">Math</span>.floor(a / <span class=\"number\">10</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (b) &#123;</span><br><span class=\"line\">            sum += b % <span class=\"number\">10</span></span><br><span class=\"line\">            b = <span class=\"built_in\">Math</span>.floor(b / <span class=\"number\">10</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// console.log(sum)</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum &lt;= k</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dfs = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">i, j, grid</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; <span class=\"number\">0</span> || i &gt; m - <span class=\"number\">1</span> || j &lt; <span class=\"number\">0</span> || j &gt; n - <span class=\"number\">1</span> || !checkValidation(i, j) || grid[i][j] == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        grid[i][j] = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span> + dfs(i + <span class=\"number\">1</span>, j, grid) + dfs(i, j + <span class=\"number\">1</span>, grid)</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> grid = <span class=\"built_in\">Array</span>.from(<span class=\"built_in\">Array</span>(m), <span class=\"function\">() =&gt;</span> <span class=\"built_in\">Array</span>(n))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">            grid[i][j] = <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> dfs(i, j, grid)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cktehwkoz00011svf6g1m9148","category_id":"cktehwkp600041svfe1zh7hnd","_id":"cktehwkpg000h1svffodp38tf"},{"post_id":"cktehwkp400031svfdpme4ljo","category_id":"cktehwkpc000c1svf7tg467vm","_id":"cktehwkpl000o1svf74jr7qq8"},{"post_id":"cktehwkpd000f1svf8i9ug2ps","category_id":"cktehwkpc000c1svf7tg467vm","_id":"cktehwkpo000z1svf8ihi66z3"},{"post_id":"cktehwkpd000f1svf8i9ug2ps","category_id":"cktehwkpm000t1svf172teowu","_id":"cktehwkpp00131svf45bx4m7x"},{"post_id":"cktehwkpf000g1svfbi2p7hod","category_id":"cktehwkpc000c1svf7tg467vm","_id":"cktehwkpp00141svf08dahz1x"},{"post_id":"cktehwkpf000g1svfbi2p7hod","category_id":"cktehwkpn000w1svfc714ezsn","_id":"cktehwkpq00171svf7heaak3s"},{"post_id":"cktehwkp800071svfaz6wby60","category_id":"cktehwkpc000c1svf7tg467vm","_id":"cktehwkpr001e1svf6wnfeuep"},{"post_id":"cktehwkp800071svfaz6wby60","category_id":"cktehwkpp00151svf5mje1oly","_id":"cktehwkps001g1svfhd2wav0j"},{"post_id":"cktehwkpa00091svfey066svw","category_id":"cktehwkpc000c1svf7tg467vm","_id":"cktehwkps001k1svfeess2cf5"},{"post_id":"cktehwkpa00091svfey066svw","category_id":"cktehwkpp00151svf5mje1oly","_id":"cktehwkpt001l1svf7rwp65gb"},{"post_id":"cktehwkpc000b1svf94ec1a4z","category_id":"cktehwkpc000c1svf7tg467vm","_id":"cktehwkpt001m1svf51by27sy"},{"post_id":"cktehwkpc000b1svf94ec1a4z","category_id":"cktehwkpp00151svf5mje1oly","_id":"cktehwkpt001p1svf0r660qfm"},{"post_id":"cktehwkpj000k1svf7alr3qth","category_id":"cktehwkpo00101svfdwr9gg5u","_id":"cktehwkpu001s1svf75f38197"},{"post_id":"cktehwkpj000k1svf7alr3qth","category_id":"cktehwkps001j1svf9e4f7d1s","_id":"cktehwkpu001t1svf9wbwe0ju"},{"post_id":"cktehwkq3001y1svf1v79ab1y","category_id":"cktehwkpc000c1svf7tg467vm","_id":"cktehwkq600231svfhhp604v0"},{"post_id":"cktehwkq3001y1svf1v79ab1y","category_id":"cktehwkpm000t1svf172teowu","_id":"cktehwkq600251svf8pxvhhex"},{"post_id":"cktehwkq3001y1svf1v79ab1y","category_id":"cktehwkq500201svf4n5626mf","_id":"cktehwkq600261svfe9bf1a6v"}],"PostTag":[{"post_id":"cktehwkoz00011svf6g1m9148","tag_id":"cktehwkp700051svf4rf48yts","_id":"cktehwkpk000l1svfhoin9405"},{"post_id":"cktehwkoz00011svf6g1m9148","tag_id":"cktehwkpc000d1svfgplw47ls","_id":"cktehwkpk000m1svf9d6d054x"},{"post_id":"cktehwkp400031svfdpme4ljo","tag_id":"cktehwkpg000j1svfb1rqhxqe","_id":"cktehwkpm000s1svfe9ck4496"},{"post_id":"cktehwkp400031svfdpme4ljo","tag_id":"cktehwkpl000p1svfab43e9wr","_id":"cktehwkpn000u1svfh5ux8ptr"},{"post_id":"cktehwkp800071svfaz6wby60","tag_id":"cktehwkpg000j1svfb1rqhxqe","_id":"cktehwkpo000y1svf6x09bkbf"},{"post_id":"cktehwkp800071svfaz6wby60","tag_id":"cktehwkpn000v1svf4n8h15my","_id":"cktehwkpo00111svf3auy5gph"},{"post_id":"cktehwkpa00091svfey066svw","tag_id":"cktehwkpg000j1svfb1rqhxqe","_id":"cktehwkpq00181svfh3732b6d"},{"post_id":"cktehwkpa00091svfey066svw","tag_id":"cktehwkpn000v1svf4n8h15my","_id":"cktehwkpq00191svf340bfnbn"},{"post_id":"cktehwkpc000b1svf94ec1a4z","tag_id":"cktehwkpg000j1svfb1rqhxqe","_id":"cktehwkpr001f1svfe4p0ai4q"},{"post_id":"cktehwkpc000b1svf94ec1a4z","tag_id":"cktehwkpn000v1svf4n8h15my","_id":"cktehwkps001h1svf21yw695q"},{"post_id":"cktehwkpd000f1svf8i9ug2ps","tag_id":"cktehwkpg000j1svfb1rqhxqe","_id":"cktehwkpt001o1svfc3mbhpkj"},{"post_id":"cktehwkpd000f1svf8i9ug2ps","tag_id":"cktehwkps001i1svfc5k4477d","_id":"cktehwkpu001q1svf8ww05a4r"},{"post_id":"cktehwkpf000g1svfbi2p7hod","tag_id":"cktehwkpg000j1svfb1rqhxqe","_id":"cktehwkpv001v1svf4b2rgw4e"},{"post_id":"cktehwkpf000g1svfbi2p7hod","tag_id":"cktehwkpu001r1svfei64hgob","_id":"cktehwkpv001w1svfemif8s1q"},{"post_id":"cktehwkpj000k1svf7alr3qth","tag_id":"cktehwkpu001u1svfgdlt1wfv","_id":"cktehwkpv001x1svf1rxket2s"},{"post_id":"cktehwkq3001y1svf1v79ab1y","tag_id":"cktehwkpg000j1svfb1rqhxqe","_id":"cktehwkq600211svfaj1udht4"},{"post_id":"cktehwkq3001y1svf1v79ab1y","tag_id":"cktehwkps001i1svfc5k4477d","_id":"cktehwkq600221svff9pt21oi"},{"post_id":"cktehwkq3001y1svf1v79ab1y","tag_id":"cktehwkq5001z1svfbex4b4mi","_id":"cktehwkq600241svfgrv40e5y"}],"Tag":[{"name":"JavaScript","_id":"cktehwkp700051svf4rf48yts"},{"name":"数据类型","_id":"cktehwkpc000d1svfgplw47ls"},{"name":"leetcode","_id":"cktehwkpg000j1svfb1rqhxqe"},{"name":"树的遍历","_id":"cktehwkpl000p1svfab43e9wr"},{"name":"动态规划","_id":"cktehwkpn000v1svf4n8h15my"},{"name":"双指针","_id":"cktehwkps001i1svfc5k4477d"},{"name":"快慢指针","_id":"cktehwkpu001r1svfei64hgob"},{"name":"hello world","_id":"cktehwkpu001u1svfgdlt1wfv"},{"name":"搜索与回溯算法","_id":"cktehwkq5001z1svfbex4b4mi"}]}}